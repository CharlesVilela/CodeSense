{"chunk_id": "ba80ae6a5eceda5f7b715de6dbd3cf1c", "content": "Docs  Docker div aligncenter img srcstaticassetsimagesdocker-docs.svg altWelcome to Docker Documentation div br br Welcome to the Docker Documentation repository. This is the source for the Docker Docs Website(https:docs.docker.com). Feel free to open pull requests or issues. Our docs are completely open source, and we deeply appreciate contributions from the Docker community!", "metadata": {"title": "Docs @ Docker", "url": "https://github.com/docker/docs/blob/main/README.md", "repo": "docker/docs", "file_path": "README.md", "file_type": "markdown", "technology": "docker_docs", "professional_context": "documentation", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758502.870568", "source_type": "github", "chunk_length": 379, "word_count": 51, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "3d1f93f2e5fa7fecc360c401fa8d1ce5", "content": "Provide feedback Wed love to hear your feedback! To submit feedback: - Click New issue(https:github.comdockerdocsissuesnew) on the docs repository, or - Click Request changes in the right column of every page on docs.docker.com(https:docs.docker.com), or - Click Give feedback on every page in the docs. To get community support, use the Docker Community Slack(https:dockr.lycomm-slack). Personalized support is available through the Docker Pro, Team, and Business subscriptions. See Docker Pricing(https:www.docker.compricing) for details. If you have an idea for a new feature or behavior change in a specific aspect of Docker or have found a product bug, file an issue in the projects repository.", "metadata": {"title": "Docs @ Docker", "url": "https://github.com/docker/docs/blob/main/README.md", "repo": "docker/docs", "file_path": "README.md", "file_type": "markdown", "technology": "docker_docs", "professional_context": "documentation", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758502.870568", "source_type": "github", "chunk_length": 699, "word_count": 101, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "aef88ac70cde1b9847a76d0034e89188", "content": "Contribute to Docker docs See CONTRIBUTING.md(CONTRIBUTING.md).", "metadata": {"title": "Docs @ Docker", "url": "https://github.com/docker/docs/blob/main/README.md", "repo": "docker/docs", "file_path": "README.md", "file_type": "markdown", "technology": "docker_docs", "professional_context": "documentation", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758502.870568", "source_type": "github", "chunk_length": 63, "word_count": 6, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "ac0a2233f111ec90abca5de10e8ee64a", "content": "Copyright and license Copyright 2013-2025 Docker, Inc., released under the Apache 2.0 license(https:github.comdockerdocsblobmainLICENSE).", "metadata": {"title": "Docs @ Docker", "url": "https://github.com/docker/docs/blob/main/README.md", "repo": "docker/docs", "file_path": "README.md", "file_type": "markdown", "technology": "docker_docs", "professional_context": "documentation", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758502.870568", "source_type": "github", "chunk_length": 137, "word_count": 13, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "fe8e1ebc74038b4dc6d88ab1193a1bf9", "content": "React(https:react.dev) middot;!GitHub license(https:img.shields.iobadgelicense-MIT-blue.svg)(https:github.comfacebookreactblobmainLICENSE)!npm version(https:img.shields.ionpmvreact.svg?styleflat)(https:www.npmjs.compackagereact)!(Runtime) Build and Test(https:github.comfacebookreactactionsworkflowsruntime_build_and_test.ymlbadge.svg)(https:github.comfacebookreactactionsworkflowsruntime_build_and_test.yml)!(Compiler) TypeScript(https:github.comfacebookreactactionsworkflowscompiler_typescript.ymlbadge.svg?branchmain)(https:github.comfacebookreactactionsworkflowscompiler_typescript.yml)!PRs Welcome(https:img.shields.iobadgePRs-welcome-brightgreen.svg)(https:legacy.reactjs.orgdocshow-to-contribute.htmlyour-first-pull-request) React is a JavaScript library for building user interfaces.", "metadata": {"title": "[React](https://react.dev/) &middot; [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/facebook/react/blob/main/LICENSE) [![npm version](https://img.shields.io/npm/v/react.svg?style=flat)](https://www.npmjs.com/package/react) [![(Runtime) Build and Test](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml/badge.svg)](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml) [![(Compiler) TypeScript](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml/badge.svg?branch=main)](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://legacy.reactjs.org/docs/how-to-contribute.html#your-first-pull-request)", "url": "https://github.com/facebook/react/blob/main/README.md", "repo": "facebook/react", "file_path": "README.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758493.0907087", "source_type": "github", "chunk_length": 791, "word_count": 18, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "15b0f9afb35acda3612e2995716eb8c1", "content": "Declarative: React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.  Component-Based: Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep the state out of the DOM.  Learn Once, Write Anywhere: We dont make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using Node(https:nodejs.orgen) and power mobile apps using React Native(https:reactnative.dev). Learn how to use React in your project(https:react.devlearn).", "metadata": {"title": "[React](https://react.dev/) &middot; [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/facebook/react/blob/main/LICENSE) [![npm version](https://img.shields.io/npm/v/react.svg?style=flat)](https://www.npmjs.com/package/react) [![(Runtime) Build and Test](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml/badge.svg)](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml) [![(Compiler) TypeScript](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml/badge.svg?branch=main)](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://legacy.reactjs.org/docs/how-to-contribute.html#your-first-pull-request)", "url": "https://github.com/facebook/react/blob/main/README.md", "repo": "facebook/react", "file_path": "README.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758493.0907087", "source_type": "github", "chunk_length": 939, "word_count": 141, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "bf749d93cec2258c804e705b0061b7c0", "content": "Installation React has been designed for gradual adoption from the start, and you can use as little or as much React as you need:  Use Quick Start(https:react.devlearn) to get a taste of React.  Add React to an Existing Project(https:react.devlearnadd-react-to-an-existing-project) to use as little or as much React as you need.  Create a New React App(https:react.devlearnstart-a-new-react-project) if youre looking for a powerful JavaScript toolchain.", "metadata": {"title": "[React](https://react.dev/) &middot; [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/facebook/react/blob/main/LICENSE) [![npm version](https://img.shields.io/npm/v/react.svg?style=flat)](https://www.npmjs.com/package/react) [![(Runtime) Build and Test](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml/badge.svg)](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml) [![(Compiler) TypeScript](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml/badge.svg?branch=main)](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://legacy.reactjs.org/docs/how-to-contribute.html#your-first-pull-request)", "url": "https://github.com/facebook/react/blob/main/README.md", "repo": "facebook/react", "file_path": "README.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758493.0907087", "source_type": "github", "chunk_length": 453, "word_count": 63, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "5755d5f7701564f0410f2cd4b93b93ee", "content": "Documentation You can find the React documentation on the website(https:react.dev). Check out the Getting Started(https:react.devlearn) page for a quick overview. The documentation is divided into several sections:  Quick Start(https:react.devlearn)  Tutorial(https:react.devlearntutorial-tic-tac-toe)  Thinking in React(https:react.devlearnthinking-in-react)  Installation(https:react.devlearninstallation)  Describing the UI(https:react.devlearndescribing-the-ui)  Adding Interactivity(https:react.devlearnadding-interactivity)  Managing State(https:react.devlearnmanaging-state)  Advanced Guides(https:react.devlearnescape-hatches)  API Reference(https:react.devreferencereact)  Where to Get Support(https:react.devcommunity)  Contributing Guide(https:legacy.reactjs.orgdocshow-to-contribute.html) You can improve it by sending pull requests to this repository(https:github.comreactjsreact.dev).", "metadata": {"title": "[React](https://react.dev/) &middot; [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/facebook/react/blob/main/LICENSE) [![npm version](https://img.shields.io/npm/v/react.svg?style=flat)](https://www.npmjs.com/package/react) [![(Runtime) Build and Test](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml/badge.svg)](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml) [![(Compiler) TypeScript](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml/badge.svg?branch=main)](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://legacy.reactjs.org/docs/how-to-contribute.html#your-first-pull-request)", "url": "https://github.com/facebook/react/blob/main/README.md", "repo": "facebook/react", "file_path": "README.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758493.0907087", "source_type": "github", "chunk_length": 898, "word_count": 62, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "77d0ecb85d27278542ede3f0edbe4885", "content": "Examples We have several examples on the website(https:react.dev). Here is the first one to get you started: jsx import  createRoot  from react-domclient; function HelloMessage(name)  return divHello namediv;  const root  createRoot(document.getElementById(container)); root.render(HelloMessage nameTaylor);  This example will render Hello Taylor into a container on the page. Youll notice that we used an HTML-like syntax; we call it JSX(https:react.devlearnwriting-markup-with-jsx). JSX is not required to use React, but it makes code more readable, and writing it feels like writing HTML.", "metadata": {"title": "[React](https://react.dev/) &middot; [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/facebook/react/blob/main/LICENSE) [![npm version](https://img.shields.io/npm/v/react.svg?style=flat)](https://www.npmjs.com/package/react) [![(Runtime) Build and Test](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml/badge.svg)](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml) [![(Compiler) TypeScript](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml/badge.svg?branch=main)](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://legacy.reactjs.org/docs/how-to-contribute.html#your-first-pull-request)", "url": "https://github.com/facebook/react/blob/main/README.md", "repo": "facebook/react", "file_path": "README.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758493.0907087", "source_type": "github", "chunk_length": 591, "word_count": 76, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "03193f6c643701b649153f8e5f44ea26", "content": "Contributing The main purpose of this repository is to continue evolving React core, making it faster and easier to use. Development of React happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React.", "metadata": {"title": "[React](https://react.dev/) &middot; [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/facebook/react/blob/main/LICENSE) [![npm version](https://img.shields.io/npm/v/react.svg?style=flat)](https://www.npmjs.com/package/react) [![(Runtime) Build and Test](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml/badge.svg)](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml) [![(Compiler) TypeScript](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml/badge.svg?branch=main)](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://legacy.reactjs.org/docs/how-to-contribute.html#your-first-pull-request)", "url": "https://github.com/facebook/react/blob/main/README.md", "repo": "facebook/react", "file_path": "README.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758493.0907087", "source_type": "github", "chunk_length": 315, "word_count": 53, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "ec3647ab2e991524e5adf5a08bfaf225", "content": "Code of Conduct(https:code.fb.comcodeofconduct) Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read the full text(https:code.fb.comcodeofconduct) so that you can understand what actions will and will not be tolerated.", "metadata": {"title": "[React](https://react.dev/) &middot; [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/facebook/react/blob/main/LICENSE) [![npm version](https://img.shields.io/npm/v/react.svg?style=flat)](https://www.npmjs.com/package/react) [![(Runtime) Build and Test](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml/badge.svg)](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml) [![(Compiler) TypeScript](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml/badge.svg?branch=main)](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://legacy.reactjs.org/docs/how-to-contribute.html#your-first-pull-request)", "url": "https://github.com/facebook/react/blob/main/README.md", "repo": "facebook/react", "file_path": "README.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758493.0907087", "source_type": "github", "chunk_length": 266, "word_count": 36, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "45179c5dcd7b8b4d3490df35f38b279a", "content": "Contributing Guide(https:legacy.reactjs.orgdocshow-to-contribute.html) Read our contributing guide(https:legacy.reactjs.orgdocshow-to-contribute.html) to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React.", "metadata": {"title": "[React](https://react.dev/) &middot; [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/facebook/react/blob/main/LICENSE) [![npm version](https://img.shields.io/npm/v/react.svg?style=flat)](https://www.npmjs.com/package/react) [![(Runtime) Build and Test](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml/badge.svg)](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml) [![(Compiler) TypeScript](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml/badge.svg?branch=main)](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://legacy.reactjs.org/docs/how-to-contribute.html#your-first-pull-request)", "url": "https://github.com/facebook/react/blob/main/README.md", "repo": "facebook/react", "file_path": "README.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758493.0907087", "source_type": "github", "chunk_length": 281, "word_count": 28, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "2e20ed5a9456649833b4e89f1a7d7aa5", "content": "Good First Issues(https:github.comfacebookreactlabelsgood20first20issue) To help you get your feet wet and get you familiar with our contribution process, we have a list of good first issues(https:github.comfacebookreactlabelsgood20first20issue) that contain bugs that have a relatively limited scope. This is a great place to get started.", "metadata": {"title": "[React](https://react.dev/) &middot; [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/facebook/react/blob/main/LICENSE) [![npm version](https://img.shields.io/npm/v/react.svg?style=flat)](https://www.npmjs.com/package/react) [![(Runtime) Build and Test](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml/badge.svg)](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml) [![(Compiler) TypeScript](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml/badge.svg?branch=main)](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://legacy.reactjs.org/docs/how-to-contribute.html#your-first-pull-request)", "url": "https://github.com/facebook/react/blob/main/README.md", "repo": "facebook/react", "file_path": "README.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758493.0907087", "source_type": "github", "chunk_length": 339, "word_count": 43, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "8ab00aacf6fdf51f2050aebfe6145d4a", "content": "License React is MIT licensed(.LICENSE).", "metadata": {"title": "[React](https://react.dev/) &middot; [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/facebook/react/blob/main/LICENSE) [![npm version](https://img.shields.io/npm/v/react.svg?style=flat)](https://www.npmjs.com/package/react) [![(Runtime) Build and Test](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml/badge.svg)](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml) [![(Compiler) TypeScript](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml/badge.svg?branch=main)](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://legacy.reactjs.org/docs/how-to-contribute.html#your-first-pull-request)", "url": "https://github.com/facebook/react/blob/main/README.md", "repo": "facebook/react", "file_path": "README.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758493.0907087", "source_type": "github", "chunk_length": 40, "word_count": 5, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "4f1a8330bf1432a95e3813ce3194efc0", "content": "dom-event-testing-library A library for unit testing events via high-level interactions, e.g., pointerdown, that produce realistic and complete DOM event sequences. There are number of challenges involved in unit testing modules that work with DOM events. 1. Gesture recognizers may need to support environments with and without support for the PointerEvent API. 2. Gesture recognizers may need to support various user interaction modes including mouse, touch, and pen use. 3. Gesture recognizers must account for the actual event sequences browsers produce (e.g., emulated touch and mouse events.) 4. Gesture recognizers must work with virtual events produced by tools like screen-readers.", "metadata": {"title": "README.md", "url": "https://github.com/facebook/react/blob/main/packages/dom-event-testing-library/README.md", "repo": "facebook/react", "file_path": "packages/dom-event-testing-library/README.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757583.462182", "source_type": "github", "chunk_length": 690, "word_count": 99, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "5b580b923f0f8d1ab19cf5dd82af47ba", "content": "Writing unit tests to cover all these scenarios is tedious and error prone. This event testing library is designed to solve these issues by allowing developers to more easily dispatch events in unit tests, and to more reliably test pointer interactions using a high-level API based on PointerEvent. Heres a basic example: js import  describeWithPointerEvent, testWithPointerType, createEventTarget, setPointerEvent, resetActivePointers  from dom-event-testing-library; describeWithPointerEvent(useTap, hasPointerEvent   beforeEach(()    basic PointerEvent mock setPointerEvent(hasPointerEvent);); afterEach(()    clear active pointers between test runs resetActivePointers(););", "metadata": {"title": "README.md", "url": "https://github.com/facebook/react/blob/main/packages/dom-event-testing-library/README.md", "repo": "facebook/react", "file_path": "packages/dom-event-testing-library/README.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757583.462182", "source_type": "github", "chunk_length": 677, "word_count": 76, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "ec9e53442f924c85d31768325f784617", "content": "test all the pointer types supported by the environment testWithPointerType(pointer down, pointerType   const ref  createRef(null); const onTapStart  jest.fn(); render(()   useTap(ref,  onTapStart); return div refref);  create an event target const target  createEventTarget(ref.current);  dispatch high-level pointer event target.pointerdown(pointerType); expect(onTapStart).toBeCalled();););  This tests the interaction in multiple scenarios. In each case, a realistic DOM event sequencewith complete mock eventsis produced. When running in a mock environment without the PointerEvent API, the test runs for both mouse and touch pointer types. When touch is the pointer type it produces emulated mouse events. When running in a mock environment with the PointerEvent API, the test runs for mouse, touch, and pen pointer types.", "metadata": {"title": "README.md", "url": "https://github.com/facebook/react/blob/main/packages/dom-event-testing-library/README.md", "repo": "facebook/react", "file_path": "packages/dom-event-testing-library/README.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757583.462182", "source_type": "github", "chunk_length": 828, "word_count": 107, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "3ca5ab5fb685374f10b44cebdc9fe408", "content": "Its important to cover all these scenarios because its very easy to introduce bugs  e.g., double calling of callbacks  if not accounting for emulated mouse events, differences in target capturing between touch and mouse pointers, and the different semantics of button across event APIs. Default values are provided for the expected native events properties. They can also be customized as needed in a test. js target.pointerdown(button: 0, buttons: 1, pageX: 10, pageY: 10, pointerType,  NOTE: use x,y instead of clientX,clientY x: 10, y: 10);  Tests that dispatch multiple pointer events will dispatch multi-touch native events on the target. js  first pointer is active target.pointerdown(pointerId: 1, pointerType);  second pointer is active target.pointerdown(pointerId: 2, pointerType);", "metadata": {"title": "README.md", "url": "https://github.com/facebook/react/blob/main/packages/dom-event-testing-library/README.md", "repo": "facebook/react", "file_path": "packages/dom-event-testing-library/README.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757583.462182", "source_type": "github", "chunk_length": 791, "word_count": 113, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "80734c7911e41a58818dca743827c13c", "content": "Copyright (c) Meta Platforms, Inc. and affiliates.   This source code is licensed under the MIT license found in the  LICENSE file in the root directory of this source tree.   emails react-core  use strict; import hasPointerEvent, setPointerEvent from.domEnvironment; export function describeWithPointerEvent(message, describeFn)  const pointerEvent  PointerEvent; const fallback  MouseEventTouchEvent; describe.each value  name true  pointerEvent false  fallback (message: name, entry   const hasPointerEvents  entry.value; setPointerEvent(hasPointerEvents); describeFn(hasPointerEvents););  export function testWithPointerType(message, testFn)  const table  hasPointerEvent()? mouse, touch, pen: mouse, touch; test.each(table)(message: s, pointerType   testFn(pointerType););", "metadata": {"title": "testHelpers.js", "url": "https://github.com/facebook/react/blob/main/packages/dom-event-testing-library/testHelpers.js", "repo": "facebook/react", "file_path": "packages/dom-event-testing-library/testHelpers.js", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757590.8350902", "source_type": "github", "chunk_length": 777, "word_count": 78, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "f73a47184c64fec3497fd3e82a37cac6", "content": "Copyright (c) Meta Platforms, Inc. and affiliates.   This source code is licensed under the MIT license found in the  LICENSE file in the root directory of this source tree.   emails react-core  use strict;   Touch events state machine.   Keeps track of the active pointers and allows them to be reflected in touch events.  const activeTouches  new Map(); export function addTouch(touch)  const identifier  touch.identifier; const target  touch.target; if (!activeTouches.has(target))  activeTouches.set(target, new Map());  if (activeTouches.get(target).get(identifier))   Do not allow existing touches to be overwritten console.error(Touch with identifier s already exists.", "metadata": {"title": "touchStore.js", "url": "https://github.com/facebook/react/blob/main/packages/dom-event-testing-library/touchStore.js", "repo": "facebook/react", "file_path": "packages/dom-event-testing-library/touchStore.js", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757591.604672", "source_type": "github", "chunk_length": 675, "word_count": 86, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "6450c60c059a76da9fdb0c595ef37a4b", "content": "Did not record touch start., identifier,);  else  activeTouches.get(target).set(identifier, touch);   export function updateTouch(touch)  const identifier  touch.identifier; const target  touch.target; if (activeTouches.get(target)! null)  activeTouches.get(target).set(identifier, touch);  else  console.error(Touch with identifier s does not exist. Cannot record touch move without a touch start., identifier,);   export function removeTouch(touch)  const identifier  touch.identifier; const target  touch.target; if (activeTouches.get(target)! null)  if (activeTouches.get(target).has(identifier))  activeTouches.get(target).delete(identifier);  else  console.error(Touch with identifier s does not exist.", "metadata": {"title": "touchStore.js", "url": "https://github.com/facebook/react/blob/main/packages/dom-event-testing-library/touchStore.js", "repo": "facebook/react", "file_path": "packages/dom-event-testing-library/touchStore.js", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757591.604672", "source_type": "github", "chunk_length": 708, "word_count": 63, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "1f3aff3085e06e6362085f6372643bf4", "content": "Cannot record touch end without a touch start., identifier,);    export function getTouches()  const touches; activeTouches.forEach((_, target)   touches.push(...getTargetTouches(target));); return touches;  export function getTargetTouches(target)  if (activeTouches.get(target)! null)  return Array.from(activeTouches.get(target).values());  return;  export function clear()  activeTouches.clear();", "metadata": {"title": "touchStore.js", "url": "https://github.com/facebook/react/blob/main/packages/dom-event-testing-library/touchStore.js", "repo": "facebook/react", "file_path": "packages/dom-event-testing-library/touchStore.js", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757591.604672", "source_type": "github", "chunk_length": 400, "word_count": 32, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "b89f362e05d3638d2d73a48900a51cb7", "content": "7.0.1 - Disallowed passing inline useEffectEvent values as JSX props to guard against accidental propagation. (34820(https:github.comfacebookreactpull34820) by jf-eirinha(https:github.comjf-eirinha)) - Switch to export  so eslint-plugin-react-hooks emits correct types for consumers in Node16 ESM projects. (34949(https:github.comfacebookreactpull34949) by karlhorky(https:github.comkarlhorky)) - Tightened the typing of configs.flat so the configs export is always defined. (34950(https:github.comfacebookreactpull34950) by poteto(https:github.compoteto)) - Fix named import runtime errors. (34951(https:github.comfacebookreactpull34951), 34953(https:github.comfacebookreactpull34953) by karlhorky(https:github.comkarlhorky))", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 726, "word_count": 62, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "d417fb746bffef903f246e4e932b0236", "content": "7.0.0 This release slims down presets to just 2 configurations (recommended and recommended-latest), and all compiler rules are enabled by default. - Breaking: Removed recommended-latest-legacy and flatrecommended configs. The plugin now provides recommended (legacy and flat configs with all recommended rules), and recommended-latest (legacy and flat configs with all recommended rules plus new bleeding edge experimental compiler rules). (poteto(https:github.compoteto) in 34757(https:github.comfacebookreactpull34757))", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 522, "word_count": 61, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "203d6135201fbf19b54a4ca0d9efa35f", "content": "6.1.1 Note: 6.1.0 accidentally allowed use of recommended without flat config, causing errors when used with ESLint v9s defineConfig() helper. This has been fixed in 6.1.1.", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 172, "word_count": 26, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "b786c5f83030d3df50568053d07bb54f", "content": "- Fix recommended config for flat config compatibility. The recommended config has been converted to flat config format. Non-flat config users should use recommended-legacy instead. (poteto(https:github.compoteto) in 34700(https:github.comfacebookreactpull34700)) - Add recommended-latest and recommended-latest-legacy configs that include React Compiler rules. (poteto(https:github.compoteto) in 34675(https:github.comfacebookreactpull34675)) - Remove unused NoUnusedOptOutDirectives rule. (poteto(https:github.compoteto) in 34703(https:github.comfacebookreactpull34703)) - Remove hermes-parser and dependency. (poteto(https:github.compoteto) in 34719(https:github.comfacebookreactpull34719)) - Remove babelplugin-proposal-private-methods dependency. (ArnaudBarre(https:github.comArnaudBarre) and josephsavona(https:github.comjosephsavona) in 34715(https:github.comfacebookreactpull34715)) - Update for Zod v3v4 compatibility. (kolian(https:github.comkolvian) and josephsavona(https:github.comjosephsavona) in 34717(https:github.comfacebookreactpull34717))", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 1057, "word_count": 78, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "4887f39e8a2fada6f775c0121ac48836", "content": "6.1.0 Note: Version 6.0.0 was mistakenly released and immediately deprecated and untagged on npm. This is the first official 6.x major release and includes breaking changes.", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 173, "word_count": 26, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "2eb35e3b086b640e226befb1d99d2f24", "content": "- Breaking: Require Node.js 18 or newer. (michaelfaith(https:github.commichaelfaith) in 32458(https:github.comfacebookreactpull32458)) - Breaking: Flat config is now the default recommended preset. Legacy config moved to recommended-legacy. (michaelfaith(https:github.commichaelfaith) in 32457(https:github.comfacebookreactpull32457)) - New Violations: Disallow calling use within trycatch blocks. (poteto(https:github.compoteto) in 34040(https:github.comfacebookreactpull34040)) - New Violations: Disallow calling useEffectEvent functions in arbitrary closures. (jbrown215(https:github.comjbrown215) in 33544(https:github.comfacebookreactpull33544)) - Handle React.useEffect in addition to useEffect in rules-of-hooks. (Ayc0(https:github.comAyc0) in 34076(https:github.comfacebookreactpull34076)) - Added react-hooks settings config option that to accept additionalEffectHooks that are used across exhaustive-deps and rules-of-hooks rules. (jbrown215(https:github.comjbrown215)) in 34497(https:github.comfacebookreactpull34497)", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 1028, "word_count": 86, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "edf16238b3dbb029110160b8db5b69aa", "content": "6.0.0 Accidentally released. See 6.1.0 for the actual changes.", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 62, "word_count": 9, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "e40c8ec6888b75526376ea3e4fe4186d", "content": "5.2.0 - Support flat config (michaelfaith(https:github.commichaelfaith) in 30774(https:github.comfacebookreactpull30774)) - Convert the plugin to TypeScript and provide package type declarations (michaelfaith(https:github.commichaelfaith) in 32279(https:github.comfacebookreactpull32279), 32283(https:github.comfacebookreactpull32283), 32240(https:github.comfacebookreactpull32240), 32400(https:github.comfacebookreactpull32400) and poteto(https:github.compoteto) in 32420(https:github.comfacebookreactpull32420)) - Fix false positive error in components with dowhile loops (tyxla(https:github.comtyxla) in 31720(https:github.comfacebookreactpull31720)) - Detect issues in class properties (mjesun(https:github.commjesun)  ecraig12345(https:github.comecraig12345) in 31823(https:github.comfacebookreactpull31823))", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 813, "word_count": 52, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "fc3e86a11329a4438768f0c9a0c4d90e", "content": "5.1.0 - Add support for dowhile loops (tyxla(https:github.comtyxla) in 28714(https:github.comfacebookreactpull28714)) - Fix error when callback argument is an identifier with an as expression (mskelton(https:github.commskelton) in 31119(https:github.comfacebookreactpull31119))", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 277, "word_count": 26, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "4267fc8faf6c7806a4e41dd8e53bba0e", "content": "5.0.0  New Violations: Component names now need to start with an uppercase letter instead of a non-lowercase letter. This means _Button or _component are no longer valid. (kassens(https:github.comkassens)) in 25162(https:github.comfacebookreactpull25162)", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 254, "word_count": 30, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "5f2894f7083397715ec3a639822007fd", "content": "- Consider dispatch from useActionState stable. (eps1lon(https:github.comeps1lon) in 29665(https:github.comfacebookreactpull29665)) - Add support for ESLint v9. (eps1lon(https:github.comeps1lon) in 28773(https:github.comfacebookreactpull28773)) - Accept as expression in callback. (StyleShit(https:github.comStyleShit) in 28202(https:github.comfacebookreactpull28202)) - Accept as expressions in deps array. (StyleShit(https:github.comStyleShit) in 28189(https:github.comfacebookreactpull28189)) - Treat React.use() the same as use(). (kassens(https:github.comkassens) in 27769(https:github.comfacebookreactpull27769)) - Move use() lint to non-experimental. (kassens(https:github.comkassens) in 27768(https:github.comfacebookreactpull27768)) - Support Flow as expressions. (cpojer(https:github.comcpojer) in 27590(https:github.comfacebookreactpull27590)) - Allow useEffect(fn, undefined). (kassens(https:github.comkassens) in 27525(https:github.comfacebookreactpull27525)) - Disallow hooks in async functions. (acdlite(https:github.comacdlite) in 27045(https:github.comfacebookreactpull27045)) - Rename experimental useEvent to useEffectEvent. (sebmarkbage(https:github.comsebmarkbage) in 25881(https:github.comfacebookreactpull25881)) - Lint for presence of useEvent functions in dependency lists. (poteto(https:github.compoteto) in 25512(https:github.comfacebookreactpull25512)) - Check useEvent references instead. (poteto(https:github.compoteto) in 25319(https:github.comfacebookreactpull25319)) - Update RulesOfHooks with useEvent rules. (poteto(https:github.compoteto) in 25285(https:github.comfacebookreactpull25285))", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 1624, "word_count": 119, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "acf8eea6d454b305861b6c453650ac71", "content": "4.6.0", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 5, "word_count": 1, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "caa440549fb0b04cc25230985e239e25", "content": "4.5.0  Fix false positive error with large number of branches. (scyron6(https:github.comscyron6) in 24287(https:github.comfacebookreactpull24287))", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 146, "word_count": 13, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "83376517f1cc4327f6a2b38be9842505", "content": "4.4.0  No changes, this was an automated release together with React 18.", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 72, "word_count": 12, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "bab98a7135791e93f59394865ace7710", "content": "4.3.0  Support ESLint 8. (MichaelDeBoey(https:github.comMichaelDeBoey) in 22248(https:github.comfacebookreactpull22248))  Fix a crash with an empty effect. (ChrisRu(https:github.comChrisRu) in 20385(https:github.comfacebookreactpull20385))  Improve the error message. (callmetwan(https:github.comcallmetwan) in 20692(https:github.comfacebookreactpull20692))  Handle optional chained methods as dependency. (AriPerkkio(https:github.comAriPerkkio) in 20247(https:github.comfacebookreactpull20247))  Assume the new useTransition signature in the rule. (rickhanlonii(https:github.comrickhanlonii) in 20976(https:github.comfacebookreactpull20976))", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 642, "word_count": 44, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "0c8e867892eb0d5c2c32c8544d35dd57", "content": "4.2.0  No changes, this was an automated release together with React 17.", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 72, "word_count": 12, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "d9b565197f9c52200dbced3d4f99aeaa", "content": "4.1.2  Fix a crash with the TypeScript 4.x parser. (eps1lon(https:github.comeps1lon) in 19815(https:github.comfacebookreactpull19815))", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 134, "word_count": 12, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "11452f5758d31bf6e6bac2663eb83f28", "content": "4.1.1  Improve support for optional chaining. (pfongkye(https:github.compfongkye) in 19680(https:github.comfacebookreactpull19680))  Fix a false positive warning for TypeScript parameters. (NeoRaider(https:github.comNeoRaider) in 19751(https:github.comfacebookreactpull19751))", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 276, "word_count": 20, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "83da9f67783bed93671ca2d387092e0b", "content": "4.1.0  New Violations: Warn when dependencies change on every render. (captbaritone(https:github.comcaptbaritone) in 19590(https:github.comfacebookreactpull19590))", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 163, "word_count": 13, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "e5a9974f9991b3c6ff9165daf2afa870", "content": "4.0.8  Fixes TypeScript typeof annotation to not be considered a dependency. (delca85(https:github.comdelca85) in 19316(https:github.comfacebookreactpull19316))", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 160, "word_count": 14, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "502d3349fc3e1cdda289c041ec779d8d", "content": "4.0.7  Fixes an overly coarse dependency suggestion. (gaearon(https:github.comgaearon) in 19313(https:github.comfacebookreactpull19313))", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 136, "word_count": 10, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "87d684a392dcfc4aece6562bea7c9c82", "content": "4.0.6  Fix crashes and other bugs related to optional chaining. (gaearon(https:github.comgaearon) in 19273(https:github.comfacebookreactpull19273) and 19275(https:github.comfacebookreactpull19275))", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 197, "word_count": 15, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "483300bde258a9bb6a220b015373b21d", "content": "4.0.5  Fix a crash when the dependency array has an empty element. (yeonjuan(https:github.comyeonjuan) in 19145(https:github.comfacebookreactpull19145))  Fix a false positive warning that occurs with optional chaining. (fredvollmer(https:github.comfredvollmer) in 19061(https:github.comfacebookreactpull19061))", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 310, "word_count": 28, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "a0459fe82663c7ec8ec6ceb32ecfedb2", "content": "4.0.4  Fix a false positive warning that occurs with optional chaining. (fredvollmer(https:github.comfredvollmer) in 19061(https:github.comfacebookreactpull19061))  Support nullish coalescing and optional chaining. (yanneves(https:github.comyanneves) in 19008(https:github.comfacebookreactpull19008))", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 300, "word_count": 23, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "0f338a9eeaa0a59f483b484f41ec2f6e", "content": "4.0.3  Remove the heuristic that checks all Hooks ending with Effect due to too many false positives. (gaearon(https:github.comgaearon) in 19004(https:github.comfacebookreactpull19004))", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 185, "word_count": 20, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "0f7d1b185a674ef0767f5b31298c57bd", "content": "4.0.2  Prevent Hooks that have Effect in the middle from being considered effects. (surgeboris(https:github.comsurgeboris) in 18907(https:github.comfacebookreactpull18907))", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 172, "word_count": 16, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "51e03483b223b59d983d54aa456dadb3", "content": "4.0.1  Declare support for ESLint 7. (MichaelDeBoey(https:github.comMichaelDeBoey) in 18878(https:github.comfacebookreactpull18878))", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 132, "word_count": 9, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "d6ed3b22702435cc511c676612542900", "content": "4.0.0", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 5, "word_count": 1, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "dbc0dee021935d94ac5065feb15ed8ed", "content": "New Violations: Consider PascalCase.useFoo() calls as Hooks. (cyan33(https:github.comcyan33) in 18722(https:github.comfacebookreactpull18722))  New Violations: Check callback body when its not written inline. (gaearon(https:github.comgaearon) in 18435(https:github.comfacebookreactpull18435))  New Violations: Check dependencies for all Hooks ending with Effect. (airjp73(https:github.comairjp73) in 18580(https:github.comfacebookreactpull18580))  Add a way to enable the dangerous autofix. (gaearon(https:github.comgaearon) in 18437(https:github.comfacebookreactpull18437))  Offer a more sensible suggestion when encountering an assignment. (Zzzen(https:github.comZzzen) in 16784(https:github.comfacebookreactpull16784))  Consider TypeScript casts of useRef as constant. (sophiebits(https:github.comsophiebits) in 18496(https:github.comfacebookreactpull18496))  Add documentation. (ghmcadams(https:github.comghmcadams) in 16607(https:github.comfacebookreactpull16607))", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 969, "word_count": 74, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "8a7bc98a87d9be542a996339839d46d3", "content": "3.0.0  New Violations: Forbid calling Hooks from classes. (ianobermiller(https:github.comianobermiller) in 18341(https:github.comfacebookreactpull18341))  Add a recommended config. (SimenB(https:github.comSimenB) in 14762(https:github.comfacebookreactpull14762))", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 262, "word_count": 18, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "20875b554fd95ab858e1c47eba8276d0", "content": "2.5.0  Fix a misleading error message in loops. (M-Izadmehr(https:github.comM-Izadmehr) in 16853(https:github.comfacebookreactpull16853))", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 137, "word_count": 11, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "4ef1ae214accda244b48c9829c8814f0", "content": "2.4.0  New Violations: Run checks for functions passed to forwardRef. (dprgarner(https:github.comdprgarner) in 17255(https:github.comfacebookreactpull17255))  New Violations: Check for ref usage in any Hook containing the word Effect. (gaearon(https:github.comgaearon) in 17663(https:github.comfacebookreactpull17663))  Disable dangerous autofix and use ESLint Suggestions API instead. (wdoug(https:github.comwdoug) in 17385(https:github.comfacebookreactpull17385))", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 465, "word_count": 41, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "e010135f274055ec7a6fea8158882a42", "content": "2.0.0  New Violations: Forbid calling Hooks at the top level. (gaearon(https:github.comgaearon) in 16455(https:github.comfacebookreactpull16455))  Fix a crash when referencing arguments in arrow functions. (hristo-kanchev(https:github.comhristo-kanchev) in 16356(https:github.comfacebookreactpull16356))", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 303, "word_count": 25, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "b44e232b2bd877ef58ae404c0467aea6", "content": "1.x The 1.x releases arent noted in this changelog, but you can find them in the commit history(https:github.comfacebookreactcommitsmainpackageseslint-plugin-react-hooks).", "metadata": {"title": "CHANGELOG.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/CHANGELOG.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/CHANGELOG.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757592.622162", "source_type": "github", "chunk_length": 171, "word_count": 18, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "3d2f50f8ea701f5af3b5251f12f08a7b", "content": "eslint-plugin-react-hooks The official ESLint plugin for React(https:react.dev) which enforces the Rules of React(https:react.devreferenceeslint-plugin-react-hooks) and other best practices.", "metadata": {"title": "README.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/README.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/README.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757593.4129245", "source_type": "github", "chunk_length": 190, "word_count": 17, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "c944d95c789e1d64aa6f6a9bb732a171", "content": "Installation Assuming you already have ESLint installed, run: sh", "metadata": {"title": "README.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/README.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/README.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757593.4129245", "source_type": "github", "chunk_length": 64, "word_count": 9, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "fabc3fa8ef699df345f4812686cd7a00", "content": "npm npm install eslint-plugin-react-hooks --save-dev", "metadata": {"title": "README.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/README.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/README.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757593.4129245", "source_type": "github", "chunk_length": 52, "word_count": 5, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "57a2c6a0810e8459f9d3479ae955efec", "content": "yarn yarn add eslint-plugin-react-hooks --dev", "metadata": {"title": "README.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/README.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/README.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757593.4129245", "source_type": "github", "chunk_length": 45, "word_count": 5, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "43e4b8ae72f384360657d84f8f8114e1", "content": "Flat Config (eslint.config.jsts) Add the recommended config for all recommended rules: js  eslint.config.js import reactHooks from eslint-plugin-react-hooks; import  defineConfig  from eslintconfig; export default defineConfig(reactHooks.configs.flat.recommended,);  If you want to try bleeding edge experimental compiler rules, use recommended-latest. js  eslint.config.js import reactHooks from eslint-plugin-react-hooks; import  defineConfig  from eslintconfig; export default defineConfig(reactHooks.configs.flatrecommended-latest,);", "metadata": {"title": "README.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/README.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/README.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757593.4129245", "source_type": "github", "chunk_length": 537, "word_count": 49, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "cc7cbbe716aa929833f0d444369b7eaf", "content": "Legacy Config (.eslintrc) If you are still using ESLint below 9.0.0, the recommended preset can also be used to enable all recommended rules. js  extends: plugin:react-hooksrecommended,...", "metadata": {"title": "README.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/README.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/README.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757593.4129245", "source_type": "github", "chunk_length": 188, "word_count": 26, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "e25b71a9ee57c47e4d2559eeb669912c", "content": "Custom Configuration If you want more fine-grained configuration, you can instead choose to enable specific rules. However, we strongly encourage using the recommended presets  see above  so that you will automatically receive new recommended rules as we add them in future versions of the plugin.", "metadata": {"title": "README.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/README.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/README.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757593.4129245", "source_type": "github", "chunk_length": 297, "word_count": 45, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "eb363f5cca626c001ef3f79867f2fe56", "content": "Flat Config (eslint.config.jsts) js import reactHooks from eslint-plugin-react-hooks; export default   files:.js,jsx, plugins:  react-hooks: reactHooks,... rules:   Core hooks rules react-hooksrules-of-hooks: error, react-hooksexhaustive-deps: warn,", "metadata": {"title": "README.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/README.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/README.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757593.4129245", "source_type": "github", "chunk_length": 249, "word_count": 22, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "cd1b67ff78193cf657f489117bb2653e", "content": "React Compiler rules react-hooksconfig: error, react-hookserror-boundaries: error, react-hookscomponent-hook-factories: error, react-hooksgating: error, react-hooksglobals: error, react-hooksimmutability: error, react-hookspreserve-manual-memoization: error, react-hookspurity: error, react-hooksrefs: error, react-hooksset-state-in-effect: error, react-hooksset-state-in-render: error, react-hooksstatic-components: error, react-hooksunsupported-syntax: warn, react-hooksuse-memo: error, react-hooksincompatible-library: warn,,;", "metadata": {"title": "README.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/README.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/README.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757593.4129245", "source_type": "github", "chunk_length": 529, "word_count": 33, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "177aff458f2d4e3824e6da075e370d23", "content": "Legacy Config (.eslintrc) js  plugins:... react-hooks, rules:...  Core hooks rules react-hooksrules-of-hooks: error, react-hooksexhaustive-deps: warn,  React Compiler rules react-hooksconfig: error, react-hookserror-boundaries: error, react-hookscomponent-hook-factories: error, react-hooksgating: error, react-hooksglobals: error, react-hooksimmutability: error, react-hookspreserve-manual-memoization: error, react-hookspurity: error, react-hooksrefs: error, react-hooksset-state-in-effect: error, react-hooksset-state-in-render: error, react-hooksstatic-components: error, react-hooksunsupported-syntax: warn, react-hooksuse-memo: error, react-hooksincompatible-library: warn", "metadata": {"title": "README.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/README.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/README.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757593.4129245", "source_type": "github", "chunk_length": 678, "word_count": 47, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "930f3c279da90ab80705dff09d28af76", "content": "Advanced Configuration exhaustive-deps can be configured to validate dependencies of custom Hooks with the additionalHooks option. This option accepts a regex to match the names of custom Hooks that have dependencies. js  rules:... react-hooksexhaustive-deps: warn,  additionalHooks: (useMyCustomHookuseMyOtherCustomHook)     We suggest to use this option very sparingly, if at all. Generally saying, we recommend most custom Hooks to not use the dependencies argument, and instead provide a higher-level API that is more focused around a specific use case.", "metadata": {"title": "README.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/README.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/README.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757593.4129245", "source_type": "github", "chunk_length": 557, "word_count": 76, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "4d29abd9b06f8b61b8dc5f1e2e4978e5", "content": "Valid and Invalid Examples Please refer to the Rules of Hooks(https:react.devreferencerulesrules-of-hooks) documentation to learn more about this rule.", "metadata": {"title": "README.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/README.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/README.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757593.4129245", "source_type": "github", "chunk_length": 151, "word_count": 18, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "b26b6d4f9bea523c5b5188a6154a7d6a", "content": "License MIT", "metadata": {"title": "README.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/README.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/README.md", "file_type": "markdown", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757593.4129245", "source_type": "github", "chunk_length": 11, "word_count": 2, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "71db39c1715bdff0bffaeb7a973ccc1f", "content": "Copyright (c) Meta Platforms, Inc. and affiliates.   This source code is licensed under the MIT license found in the  LICENSE file in the root directory of this source tree.   jest-environment node  use strict; const ESLintTesterV7  require(eslint-v7).RuleTester; const ESLintTesterV9  require(eslint-v9).RuleTester; const ReactHooksESLintPlugin  require(eslint-plugin-react-hooks); const ReactHooksESLintRule  ReactHooksESLintPlugin.default.rulesexhaustive-deps;   A string template tag that removes padding from the left side of multi-line strings  param Array strings array of code strings (only one expected)", "metadata": {"title": "ESLintRuleExhaustiveDeps-test.js", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/__tests__/ESLintRuleExhaustiveDeps-test.js", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/__tests__/ESLintRuleExhaustiveDeps-test.js", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757594.8450432", "source_type": "github", "chunk_length": 612, "word_count": 69, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "6e9dc941b6337d1ab2aee4773473e29b", "content": "Copyright (c) Meta Platforms, Inc. and affiliates.   This source code is licensed under the MIT license found in the  LICENSE file in the root directory of this source tree.   jest-environment node  use strict; const ESLintTesterV7  require(eslint-v7).RuleTester; const ESLintTesterV9  require(eslint-v9).RuleTester; const ReactHooksESLintPlugin  require(eslint-plugin-react-hooks); const ReactHooksESLintRule  ReactHooksESLintPlugin.default.rulesrules-of-hooks;   A string template tag that removes padding from the left side of multi-line strings  param Array strings array of code strings (only one expected)", "metadata": {"title": "ESLintRulesOfHooks-test.js", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js", "file_type": "code", "technology": "react", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757595.72391", "source_type": "github", "chunk_length": 611, "word_count": 69, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "29ce835c652f310d4782ba214feae514", "content": "function conditionalError(hook, hasPreviousFinalizer  false)  return  message: React Hook hook is called conditionally. React Hooks must be   called in the exact same order in every component render.  (hasPreviousFinalizer?  Did you accidentally call a React Hook after an early return?:),;", "metadata": {"title": "ESLintRulesOfHooks-test.js", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js", "file_type": "code", "technology": "react", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757595.72391", "source_type": "github", "chunk_length": 290, "word_count": 38, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "9b9e655cee324aa4b7bd95da31a95e06", "content": "function loopError(hook)  return  message: React Hook hook may be executed more than once. Possibly   because it is called in a loop. React Hooks must be called in the   exact same order in every component render.,;", "metadata": {"title": "ESLintRulesOfHooks-test.js", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js", "file_type": "code", "technology": "react", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757595.72391", "source_type": "github", "chunk_length": 215, "word_count": 35, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "cbbfc1e5d47cadf86e6a0bc410e1ee54", "content": "function functionError(hook, fn)  return  message: React Hook hook is called in function fn that is neither   a React function component nor a custom React Hook function.   React component names must start with an uppercase letter.   React Hook names must start with the word use.,;", "metadata": {"title": "ESLintRulesOfHooks-test.js", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js", "file_type": "code", "technology": "react", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757595.72391", "source_type": "github", "chunk_length": 282, "word_count": 44, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "c6e7ed61a2a8419d89315c6ba9f7c815", "content": "function genericError(hook)  return  message: React Hook hook cannot be called inside a callback. React Hooks   must be called in a React function component or a custom React   Hook function.,;", "metadata": {"title": "ESLintRulesOfHooks-test.js", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js", "file_type": "code", "technology": "react", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757595.72391", "source_type": "github", "chunk_length": 193, "word_count": 29, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "49fd6fca6ba16cab9ef55b77bb76d11b", "content": "function topLevelError(hook)  return  message: React Hook hook cannot be called at the top level. React Hooks   must be called in a React function component or a custom React   Hook function.,;", "metadata": {"title": "ESLintRulesOfHooks-test.js", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js", "file_type": "code", "technology": "react", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757595.72391", "source_type": "github", "chunk_length": 193, "word_count": 30, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "d620c87d7b7078d3433d411d01e37628", "content": "function classError(hook)  return  message: React Hook hook cannot be called in a class component. React Hooks   must be called in a React function component or a custom React   Hook function.,;", "metadata": {"title": "ESLintRulesOfHooks-test.js", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js", "file_type": "code", "technology": "react", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757595.72391", "source_type": "github", "chunk_length": 194, "word_count": 30, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "221434b3e2f39d7bd8958841c1132a5f", "content": "function useEffectEventError(fn, called)  if (fn  null)  return  message: React Hook useEffectEvent can only be called at the top level of your component.   It cannot be passed down.,;  return  message: fn is a function created with React Hook useEffectEvent, and can only be called from   Effects and Effect Events in the same component.  (called?:  It cannot be assigned to a variable or passed down.),;", "metadata": {"title": "ESLintRulesOfHooks-test.js", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js", "file_type": "code", "technology": "react", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757595.72391", "source_type": "github", "chunk_length": 405, "word_count": 63, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "39230efb25125347e4f4b38ff9556d61", "content": "function asyncComponentHookError(fn)  return  message: React Hook fn cannot be called in an async function.,;", "metadata": {"title": "ESLintRulesOfHooks-test.js", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js", "file_type": "code", "technology": "react", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757595.72391", "source_type": "github", "chunk_length": 109, "word_count": 14, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "57939ff0405d9834f46ae8f62861c7ac", "content": "function tryCatchUseError(fn)  return  message: React Hook fn cannot be called in a trycatch block.,;   For easier local testing if (!process.env.CI)  let only; let skipped;...allTests.valid,...allTests.invalid.forEach(t   if (t.skip)  delete t.skip; skipped.push(t);  if (t.only)  delete t.only; only.push(t);); const predicate  t   if (only.length  0)  return only.indexOf(t)! -1;  if (skipped.length  0)  return skipped.indexOf(t)  -1;  return true;; allTests.valid  allTests.valid.filter(predicate); allTests.invalid  allTests.invalid.filter(predicate);", "metadata": {"title": "ESLintRulesOfHooks-test.js", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js", "file_type": "code", "technology": "react", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757595.72391", "source_type": "github", "chunk_length": 557, "word_count": 55, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "10ebdc7f3c97dfac22017b19186729f8", "content": "Copyright (c) Meta Platforms, Inc. and affiliates.   This source code is licensed under the MIT license found in the  LICENSE file in the root directory of this source tree.  import RuleTester from eslint; import allRules from..srcsharedReactCompiler; const ESLintTesterV8  require(eslint-v8).RuleTester;   A string template tag that removes padding from the left side of multi-line strings  param Array strings array of code strings (only one expected)", "metadata": {"title": "ReactCompilerRuleTypescript-test.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/__tests__/ReactCompilerRuleTypescript-test.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/__tests__/ReactCompilerRuleTypescript-test.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757596.4895012", "source_type": "github", "chunk_length": 453, "word_count": 63, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "4d0ee7356e4a4c7b4cf169ca44933f95", "content": "This file is purely being used for local jest runs, and doesnt participate in the build process.  use strict; module.exports   extends:....babel.config-ts.js,;", "metadata": {"title": "babel.config.js", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/babel.config.js", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/babel.config.js", "file_type": "code", "technology": "react", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757597.2500865", "source_type": "github", "chunk_length": 159, "word_count": 21, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "ba922774dde9bca1e4eb2e1060117d55", "content": "module.exports  require(.srcindex.ts);", "metadata": {"title": "index.js", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/index.js", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/index.js", "file_type": "code", "technology": "react", "professional_context": "documentation", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757598.0264182", "source_type": "github", "chunk_length": 38, "word_count": 2, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "1ea91d0d82300c5bf02db1cdb6247c0d", "content": "use strict; process.env.NODE_ENV  development; module.exports   setupFiles: require.resolve(....scriptsjestsetupEnvironment.js), moduleFileExtensions: ts, js, json,;", "metadata": {"title": "jest.config.js", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/jest.config.js", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/jest.config.js", "file_type": "code", "technology": "react", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757598.7906108", "source_type": "github", "chunk_length": 165, "word_count": 11, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "823ad2d1efdc8f6b43fea4d349104805", "content": "Jest Snapshot v1, https:goo.glfbAQLP exportsdescribeWithPointerEvent: MouseEventTouchEvent provides boolean to tests 1  false; exportsdescribeWithPointerEvent: MouseEventTouchEvent testWithPointerType: mouse 1  mouse; exportsdescribeWithPointerEvent: MouseEventTouchEvent testWithPointerType: touch 1  touch; exportsdescribeWithPointerEvent: PointerEvent provides boolean to tests 1  true; exportsdescribeWithPointerEvent: PointerEvent testWithPointerType: mouse 1  mouse; exportsdescribeWithPointerEvent: PointerEvent testWithPointerType: pen 1  pen; exportsdescribeWithPointerEvent: PointerEvent testWithPointerType: touch 1  touch;", "metadata": {"title": "index-test.internal.js.snap", "url": "https://github.com/facebook/react/blob/main/packages/dom-event-testing-library/__tests__/__snapshots__/index-test.internal.js.snap", "repo": "facebook/react", "file_path": "packages/dom-event-testing-library/__tests__/__snapshots__/index-test.internal.js.snap", "file_type": "documentation", "technology": "react", "professional_context": "documentation", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757584.8014941", "source_type": "github", "chunk_length": 634, "word_count": 50, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "557be824c48d687404603e6fb7b9d0bc", "content": "Copyright (c) Meta Platforms, Inc. and affiliates.   This source code is licensed under the MIT license found in the  LICENSE file in the root directory of this source tree.  import reactHooks from.cjseslint-plugin-react-hooks; export  reactHooks;", "metadata": {"title": "index.d.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/npm/index.d.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/npm/index.d.ts", "file_type": "code", "technology": "react", "professional_context": "documentation", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757599.849892", "source_type": "github", "chunk_length": 247, "word_count": 34, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "8f7bb7d9af4df90881106797be9b17bc", "content": "Copyright (c) Meta Platforms, Inc. and affiliates.   This source code is licensed under the MIT license found in the  LICENSE file in the root directory of this source tree.  use strict;  TODO: this doesnt make sense for an ESLint rule.  We need to fix our build process to not create bundles for raw packages like this. if (process.env.NODE_ENV  production)  module.exports  require(.cjseslint-plugin-react-hooks.production.js);  else  module.exports  require(.cjseslint-plugin-react-hooks.development.js);   Hint to Nodes cjs-module-lexer to make named imports work  https:github.comfacebookreactissues34801issuecomment-3433478810  eslint-disable-next-line ft-flowno-unused-expressions 0  (module.exports   meta: true, rules: true, configs: true,);", "metadata": {"title": "index.js", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/npm/index.js", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/npm/index.js", "file_type": "code", "technology": "react", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757600.6182945", "source_type": "github", "chunk_length": 750, "word_count": 84, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "cb86428f19182072fcad91551fb5a94b", "content": "name: eslint-plugin-react-hooks, description: ESLint rules for React Hooks, version: 7.0.0, repository:  type: git, url: https:github.comfacebookreact.git, directory: packageseslint-plugin-react-hooks, files:  LICENSE, README.md, cjs, index.js, index.d.ts, keywords:  eslint, eslint-plugin, eslintplugin, react, scripts:  build:compiler: cd....compiler  yarn workspace babel-plugin-react-compiler build, test: yarn build:compiler  jest, typecheck: tsc --noEmit, license: MIT, bugs:  url: https:github.comfacebookreactissues, main:.index.js, types:.index.d.ts, engines:  node: 18, homepage: https:react.dev, peerDependencies:  eslint: 3.0.0  4.0.0  5.0.0  6.0.0  7.0.0  8.0.0-0  9.0.0, dependencies:  babelcore: 7.24.4, babelparser: 7.24.4, hermes-parser: 0.25.1, zod: 3.25.0  4.0.0, zod-validation-error: 3.5.0  4.0.0, devDependencies:  babeleslint-parser: 7.11.4, babelpreset-typescript: 7.26.0, babeltypes: 7.19.0, tsconfigstrictest: 2.0.5, typeseslint: 9.6.1, typesestree: 1.0.6, typesestree-jsx: 1.0.5, typesnode: 20.2.5, typescript-eslintparser-v2: npm:typescript-eslintparser2.26.0, typescript-eslintparser-v3: npm:typescript-eslintparser3.10.0, typescript-eslintparser-v4: npm:typescript-eslintparser4.1.0, typescript-eslintparser-v5: npm:typescript-eslintparser5.62.0, babel-eslint: 10.0.3, eslint-v7: npm:eslint7.7.0, eslint-v8: npm:eslint8.57.1, eslint-v9: npm:eslint9.0.0, jest: 29.5.0, typescript: 5.4.3", "metadata": {"title": "package.json", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/package.json", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/package.json", "file_type": "documentation", "technology": "react", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757601.4110448", "source_type": "github", "chunk_length": 1415, "word_count": 113, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "5564a4dedb71489c8d587439c4fb2ee2", "content": "Copyright OpenJS Foundation and other contributors, www.openjsf.org Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the Software), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, andor sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED AS IS, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.", "metadata": {"title": "LICENSE", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/code-path-analysis/LICENSE", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/code-path-analysis/LICENSE", "file_type": "documentation", "technology": "react", "professional_context": "documentation", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757602.6971562", "source_type": "github", "chunk_length": 824, "word_count": 123, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "bed8aef8d36255a0868a97fe6847861a", "content": "IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.", "metadata": {"title": "LICENSE", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/code-path-analysis/LICENSE", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/code-path-analysis/LICENSE", "file_type": "documentation", "technology": "react", "professional_context": "documentation", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757602.6971562", "source_type": "github", "chunk_length": 258, "word_count": 46, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "f6a393964091f42eede7a9881c9559d0", "content": "Code Path Analyzer This code is a forked version of ESLints Code Path Analyzer which includes support for Component Syntax. Forked from: https:github.comeslinteslinttreemainliblintercode-path-analysis", "metadata": {"title": "README.md", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/code-path-analysis/README.md", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/code-path-analysis/README.md", "file_type": "markdown", "technology": "react", "professional_context": "documentation", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757603.4538062", "source_type": "github", "chunk_length": 200, "word_count": 23, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "2feb941ba526a703d1ff7ebb0bd57989", "content": "function assert(cond)  if (!cond)  throw new Error(Assertion violated.);   module.exports  assert;", "metadata": {"title": "assert.js", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/code-path-analysis/assert.js", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/code-path-analysis/assert.js", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757604.4968572", "source_type": "github", "chunk_length": 98, "word_count": 10, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "452cccbc65d9fe8e781f19709c66f58d", "content": "use strict; ------------------------------------------------------------------------------  Requirements ------------------------------------------------------------------------------ ------------------------------------------------------------------------------  Helpers ------------------------------------------------------------------------------   Checks whether or not a given segment is reachable.  param CodePathSegment segment A segment to check.  returns boolean true if the segment is reachable.  function isReachable(segment)  return segment.reachable;  ------------------------------------------------------------------------------  Public Interface ------------------------------------------------------------------------------   A code path segment.", "metadata": {"title": "code-path-segment.js", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/code-path-analysis/code-path-segment.js", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/code-path-analysis/code-path-segment.js", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757606.097089", "source_type": "github", "chunk_length": 764, "word_count": 44, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "927f9daa6579de5aad2db34314b4073e", "content": "use strict; ------------------------------------------------------------------------------  Requirements ------------------------------------------------------------------------------  eslint-disable-next-line const CodePathState  require(.code-path-state);  eslint-disable-next-line const IdGenerator  require(.id-generator); ------------------------------------------------------------------------------  Public Interface ------------------------------------------------------------------------------   A code path.", "metadata": {"title": "code-path.js", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/code-path-analysis/code-path.js", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/code-path-analysis/code-path.js", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757607.651361", "source_type": "github", "chunk_length": 517, "word_count": 20, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "d7db77fa7c248a436cbf2df77e3e38df", "content": "Copyright (c) Meta Platforms, Inc. and affiliates.   This source code is licensed under the MIT license found in the  LICENSE file in the root directory of this source tree.", "metadata": {"title": "index-test.internal.js", "url": "https://github.com/facebook/react/blob/main/packages/dom-event-testing-library/__tests__/index-test.internal.js", "repo": "facebook/react", "file_path": "packages/dom-event-testing-library/__tests__/index-test.internal.js", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757585.5698073", "source_type": "github", "chunk_length": 173, "word_count": 29, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "3cfbcd0962850fbae9e11dd8d042e9b9", "content": "emails react-core  use strict; import defaultBrowserChromeSize from..constants; import  createEventTarget, describeWithPointerEvent, testWithPointerType, resetActivePointers,  from..index;   Unit test helpers  describeWithPointerEvent(describeWithPointerEvent, pointerEvent   test(provides boolean to tests, ()   expect(pointerEvent).toMatchSnapshot();); testWithPointerType(testWithPointerType, pointerType   expect(pointerType).toMatchSnapshot();););   createEventTarget  describe(createEventTarget, ()   let node; beforeEach(()   node  document.createElement(div);); afterEach(()   node  null; resetActivePointers();); it(returns expected API, ()   const target  createEventTarget(node); expect(target.node).toEqual(node); expect(Object.keys(target)).toMatchInlineSnapshot(node, blur, click, focus, keydown, keyup, scroll, virtualclick, contextmenu, pointercancel, pointerdown, pointerhover, pointermove, pointerenter, pointerexit, pointerup, tap, setBoundingClientRect,););   Simple events  describe(.blur(), ()   it(default, ()   const target  createEventTarget(node); node.addEventListener(blur, e   expect(e.relatedTarget).toMatchInlineSnapshot(null);); target.blur();); it(custom payload, ()   const target  createEventTarget(node); node.addEventListener(blur, e   expect(e.relatedTarget).toMatchInlineSnapshot(null);); target.blur(););); describe(.click(), ()   it(default, ()   const target  createEventTarget(node); node.addEventListener(click, e   expect(e.altKey).toEqual(false); expect(e.button).toEqual(0); expect(e.buttons).toEqual(0); expect(e.clientX).toEqual(0); expect(e.clientY).toEqual(0); expect(e.ctrlKey).toEqual(false); expect(e.detail).toEqual(1); expect(typeof e.getModifierState).toEqual(function); expect(e.metaKey).toEqual(false); expect(e.movementX).toEqual(0); expect(e.movementY).toEqual(0); expect(e.offsetX).toEqual(0); expect(e.offsetY).toEqual(0); expect(e.pageX).toEqual(0); expect(e.pageY).toEqual(0); expect(typeof e.preventDefault).toEqual(function); expect(e.screenX).toEqual(0); expect(e.screenY).toEqual(defaultBrowserChromeSize); expect(e.shiftKey).toEqual(false); expect(typeof e.timeStamp).toEqual(number);); target.click();); it(custom payload, ()   const target  createEventTarget(node); node.addEventListener(click, e   expect(e.altKey).toEqual(true); expect(e.button).toEqual(1); expect(e.buttons).toEqual(4); expect(e.clientX).toEqual(10); expect(e.clientY).toEqual(20); expect(e.ctrlKey).toEqual(true); expect(e.metaKey).toEqual(true); expect(e.movementX).toEqual(1); expect(e.movementY).toEqual(2); expect(e.offsetX).toEqual(5); expect(e.offsetY).toEqual(5); expect(e.pageX).toEqual(50); expect(e.pageY).toEqual(50); expect(e.screenX).toEqual(10); expect(e.screenY).toEqual(20  defaultBrowserChromeSize); expect(e.shiftKey).toEqual(true);); target.click(altKey: true, button: 1, buttons: 4, x: 10, y: 20, ctrlKey: true, metaKey: true, movementX: 1, movementY: 2, offsetX: 5, offsetY: 5, pageX: 50, pageY: 50, shiftKey: true,););); describe(.focus(), ()   it(default, ()   const target  createEventTarget(node); node.addEventListener(focus, e   expect(e.relatedTarget).toMatchInlineSnapshot(null);); target.blur();); it(custom payload, ()   const target  createEventTarget(node); node.addEventListener(focus, e   expect(e.relatedTarget).toMatchInlineSnapshot(null);); target.blur(););); describe(.keydown(), ()   it(default, ()   const target  createEventTarget(node); node.addEventListener(keydown, e   expect(e.altKey).toEqual(false); expect(e.ctrlKey).toEqual(false); expect(typeof e.getModifierState).toEqual(function); expect(e.key).toEqual(); expect(e.metaKey).toEqual(false); expect(typeof e.preventDefault).toEqual(function); expect(e.shiftKey).toEqual(false); expect(typeof e.timeStamp).toEqual(number);); target.keydown();); it(custom payload, ()   const target  createEventTarget(node); node.addEventListener(keydown, e   expect(e.altKey).toEqual(true); expect(e.ctrlKey).toEqual(true); expect(e.isComposing).toEqual(true); expect(e.key).toEqual(Enter); expect(e.metaKey).toEqual(true); expect(e.shiftKey).toEqual(true);); target.keydown(altKey: true, ctrlKey: true, isComposing: true, key: Enter, metaKey: true, shiftKey: true,););); describe(.keyup(), ()   it(default, ()   const target  createEventTarget(node); node.addEventListener(keyup, e   expect(e.altKey).toEqual(false); expect(e.ctrlKey).toEqual(false); expect(typeof e.getModifierState).toEqual(function); expect(e.key).toEqual(); expect(e.metaKey).toEqual(false); expect(typeof e.preventDefault).toEqual(function); expect(e.shiftKey).toEqual(false); expect(typeof e.timeStamp).toEqual(number);); target.keydown();); it(custom payload, ()   const target  createEventTarget(node); node.addEventListener(keyup, e   expect(e.altKey).toEqual(true); expect(e.ctrlKey).toEqual(true); expect(e.isComposing).toEqual(true); expect(e.key).toEqual(Enter); expect(e.metaKey).toEqual(true); expect(e.shiftKey).toEqual(true);); target.keyup(altKey: true, ctrlKey: true, isComposing: true, key: Enter, metaKey: true, shiftKey: true,););); describe(.scroll(), ()   it(default, ()   const target  createEventTarget(node); node.addEventListener(scroll, e   expect(e.type).toEqual(scroll);); target.scroll(););); describe(.virtualclick(), ()   it(default, ()   const target  createEventTarget(node); node.addEventListener(click, e   expect(e.altKey).toEqual(false); expect(e.button).toEqual(0); expect(e.buttons).toEqual(0); expect(e.clientX).toEqual(0); expect(e.clientY).toEqual(0); expect(e.ctrlKey).toEqual(false); expect(e.detail).toEqual(0); expect(typeof e.getModifierState).toEqual(function); expect(e.metaKey).toEqual(false); expect(e.movementX).toEqual(0); expect(e.movementY).toEqual(0); expect(e.offsetX).toEqual(0); expect(e.offsetY).toEqual(0); expect(e.pageX).toEqual(0); expect(e.pageY).toEqual(0); expect(typeof e.preventDefault).toEqual(function); expect(e.screenX).toEqual(0); expect(e.screenY).toEqual(0); expect(e.shiftKey).toEqual(false); expect(typeof e.timeStamp).toEqual(number);); target.virtualclick();); it(custom payload, ()   const target  createEventTarget(node); node.addEventListener(click, e    expect most of the custom payload to be ignored expect(e.altKey).toEqual(true); expect(e.button).toEqual(1); expect(e.buttons).toEqual(0); expect(e.clientX).toEqual(0); expect(e.clientY).toEqual(0); expect(e.ctrlKey).toEqual(true); expect(e.detail).toEqual(0); expect(e.metaKey).toEqual(true); expect(e.pageX).toEqual(0); expect(e.pageY).toEqual(0); expect(e.screenX).toEqual(0); expect(e.screenY).toEqual(0); expect(e.shiftKey).toEqual(true);); target.virtualclick(altKey: true, button: 1, buttons: 4, x: 10, y: 20, ctrlKey: true, metaKey: true, pageX: 50, pageY: 50, shiftKey: true,);););   Complex event sequences...coming soon    Other APIs  it(.setBoundingClientRect(), ()   const target  createEventTarget(node); expect(node.getBoundingClientRect()).toMatchInlineSnapshot(bottom: 0, height: 0, left: 0, right: 0, top: 0, width: 0, x: 0, y: 0,); target.setBoundingClientRect(x: 10, y: 20, width: 100, height: 200); expect(node.getBoundingClientRect()).toMatchInlineSnapshot(bottom: 220, height: 200, left: 10, right: 110, top: 20, width: 100,);););", "metadata": {"title": "index-test.internal.js", "url": "https://github.com/facebook/react/blob/main/packages/dom-event-testing-library/__tests__/index-test.internal.js", "repo": "facebook/react", "file_path": "packages/dom-event-testing-library/__tests__/index-test.internal.js", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757585.5698073", "source_type": "github", "chunk_length": 7190, "word_count": 430, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "e247a05dcb4230b716418c9d0cf08bcd", "content": "use strict;  eslint-disable react-internalsafe-string-coercion  ------------------------------------------------------------------------------  Public Interface ------------------------------------------------------------------------------   A generator for unique ids.", "metadata": {"title": "id-generator.js", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/code-path-analysis/id-generator.js", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/code-path-analysis/id-generator.js", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757609.4926903", "source_type": "github", "chunk_length": 269, "word_count": 13, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "270fca5348c6293f5b7fbd425be51ec9", "content": "class IdGenerator    param string prefix Optional. A prefix of generated ids.  constructor(prefix)  this.prefix  String(prefix); this.n  0;    Generates id.  returns string A generated id.  next()  this.n  (1  this.n)  0;  c8 ignore start  if (this.n  0)  this.n  1;   c8 ignore stop  return this.prefix  this.n;   module.exports  IdGenerator;", "metadata": {"title": "id-generator.js", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/code-path-analysis/id-generator.js", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/code-path-analysis/id-generator.js", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757609.4926903", "source_type": "github", "chunk_length": 343, "word_count": 44, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "5b92a85318b60e8f0de8c5b79cbc1129", "content": "Copyright (c) Meta Platforms, Inc. and affiliates.   This source code is licensed under the MIT license found in the  LICENSE file in the root directory of this source tree.", "metadata": {"title": "index.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/index.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/index.ts", "file_type": "code", "technology": "react", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757610.2797644", "source_type": "github", "chunk_length": 173, "word_count": 29, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "4faa25f308d5b4dcb4ed0863156c4e65", "content": "import type Linter, Rule from eslint; import ExhaustiveDeps from.rulesExhaustiveDeps; import  allRules, mapErrorSeverityToESlint, recommendedRules, recommendedLatestRules,  from.sharedReactCompiler; import RulesOfHooks from.rulesRulesOfHooks; const rules   exhaustive-deps: ExhaustiveDeps, rules-of-hooks: RulesOfHooks,...Object.fromEntries(Object.entries(allRules).map((name, config)  name, config.rule),),  satisfies Recordstring, Rule.RuleModule; const basicRuleConfigs   react-hooksrules-of-hooks: error, react-hooksexhaustive-deps: warn,  as const satisfies Linter.RulesRecord; const recommendedCompilerRuleConfigs  Object.fromEntries(Object.entries(recommendedRules).map((name, ruleConfig)   return  react-hooksname as const, mapErrorSeverityToESlint(ruleConfig.severity),  as const;),) as Recordreact-hooksstring, Linter.RuleEntry; const recommendedLatestCompilerRuleConfigs  Object.fromEntries(Object.entries(recommendedLatestRules).map((name, ruleConfig)   return  react-hooksname as const, mapErrorSeverityToESlint(ruleConfig.severity),  as const;),) as Recordreact-hooksstring, Linter.RuleEntry; const recommendedRuleConfigs: Linter.RulesRecord...basicRuleConfigs,...recommendedCompilerRuleConfigs,; const recommendedLatestRuleConfigs: Linter.RulesRecord...basicRuleConfigs,...recommendedLatestCompilerRuleConfigs,; const plugins  react-hooks; type ReactHooksFlatConfig   plugins: react: any; rules: Linter.RulesRecord;; const configs   recommended:  plugins, rules: recommendedRuleConfigs,, recommended-latest:  plugins, rules: recommendedLatestRuleConfigs,, flat:  as  recommended: ReactHooksFlatConfig; recommended-latest: ReactHooksFlatConfig;,; const plugin   meta:  name: eslint-plugin-react-hooks, version: 7.0.0,, rules, configs,; Object.assign(configs.flat,  recommended-latest:  plugins: react-hooks: plugin, rules: configsrecommended-latest.rules,, recommended:  plugins: react-hooks: plugin, rules: configs.recommended.rules,,); export default plugin;", "metadata": {"title": "index.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/index.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/index.ts", "file_type": "code", "technology": "react", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757610.2797644", "source_type": "github", "chunk_length": 1974, "word_count": 125, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "8eeba7d7006cc32371b90a2255c3cfd9", "content": "function markNode(node: Node, optionalChains: Mapstring, boolean  null, result: string,): void  if (optionalChains)  if (optional in node  node.optional)   We only want to consider it optional if all usages were optional. if (!optionalChains.has(result))   Mark as (maybe) optional. If theres a required usage, this will be overridden. optionalChains.set(result, true);   else   Mark as required. optionalChains.set(result, false);      Assuming () means the passed node.  (foo) - foo  foo(.)bar - foo.bar  foo.bar(.)baz - foo.bar.baz  Otherwise throw.", "metadata": {"title": "ExhaustiveDeps.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/rules/ExhaustiveDeps.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/rules/ExhaustiveDeps.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757611.364991", "source_type": "github", "chunk_length": 552, "word_count": 69, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "50d3956b66abb2d51a7a33442a4da855", "content": "function getNodeWithoutReactNamespace(node: Expression  Super,): Expression  Identifier  Super  if (node.type  MemberExpression  node.object.type  Identifier  node.object.name  React  node.property.type  Identifier!node.computed)  return node.property;  return node;   Whats the index of callback that needs to be analyzed for a given Hook?  -1 if its not a Hook we care about (e.g. useState).  0 for useEffectuseMemouseCallback(fn).  1 for useImperativeHandle(ref, fn).  For additionally configured Hooks, assume that theyre like useEffect (0).", "metadata": {"title": "ExhaustiveDeps.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/rules/ExhaustiveDeps.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/rules/ExhaustiveDeps.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757611.364991", "source_type": "github", "chunk_length": 545, "word_count": 62, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "5a5c0c4bd716002d5ed0a2da1190b0a3", "content": "function fastFindReferenceWithParent(start: Node, target: Node): Node  null  const queue  start; let item: Node; while (queue.length)  item  queue.shift() as Node; if (isSameIdentifier(item, target))  return item;  if (!isAncestorNodeOf(item, target))  continue;  for (const key, value of Object.entries(item))  if (key  parent)  continue;  if (isNodeLike(value))  value.parent  item; queue.push(value);  else if (Array.isArray(value))  value.forEach(val   if (isNodeLike(val))  val.parent  item; queue.push(val););    return null;", "metadata": {"title": "ExhaustiveDeps.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/rules/ExhaustiveDeps.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/rules/ExhaustiveDeps.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757611.364991", "source_type": "github", "chunk_length": 531, "word_count": 54, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "b78bb0c0c02e4ae285072e279ab9571f", "content": "function joinEnglish(arr: Arraystring): string  let s; for (let i  0; i  arr.length; i)  s  arri; if (i  0  arr.length  2)  s   and;  else if (i  arr.length - 2  arr.length  2)  s, and;  else if (i  arr.length - 1)  s,;   return s;", "metadata": {"title": "ExhaustiveDeps.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/rules/ExhaustiveDeps.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/rules/ExhaustiveDeps.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757611.364991", "source_type": "github", "chunk_length": 231, "word_count": 41, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "0928acb96de8235b4d4f35bd92c6ff25", "content": "function isNodeLike(val: unknown): boolean  return (typeof val  object  val! null!Array.isArray(val)  type in val  typeof val.type  string);", "metadata": {"title": "ExhaustiveDeps.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/rules/ExhaustiveDeps.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/rules/ExhaustiveDeps.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757611.364991", "source_type": "github", "chunk_length": 140, "word_count": 16, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "09c6d030ccbf6867fd465888c4ae5b2c", "content": "function isSameIdentifier(a: Node, b: Node): boolean  return ((a.type  Identifier  a.type  JSXIdentifier)  a.type  b.type  a.name  b.name!!a.range!!b.range  a.range0  b.range0  a.range1  b.range1);", "metadata": {"title": "ExhaustiveDeps.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/rules/ExhaustiveDeps.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/rules/ExhaustiveDeps.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757611.364991", "source_type": "github", "chunk_length": 197, "word_count": 19, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "e73807d9bcad54260e045f30e883fb1f", "content": "function isAncestorNodeOf(a: Node, b: Node): boolean  return (!!a.range!!b.range  a.range0  b.range0  a.range1  b.range1);", "metadata": {"title": "ExhaustiveDeps.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/rules/ExhaustiveDeps.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/rules/ExhaustiveDeps.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757611.364991", "source_type": "github", "chunk_length": 122, "word_count": 12, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "db29014a06f2698bf70e04494d84cf20", "content": "function isUseEffectEventIdentifier(node: Node): boolean  return node.type  Identifier  node.name  useEffectEvent;", "metadata": {"title": "ExhaustiveDeps.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/rules/ExhaustiveDeps.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/rules/ExhaustiveDeps.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757611.364991", "source_type": "github", "chunk_length": 114, "word_count": 9, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "52857d7c8677698550f253df59e03853", "content": "function getUnknownDependenciesMessage(reactiveHookName: string): string  return (React Hook reactiveHookName received a function whose dependencies   are unknown. Pass an inline function instead.);  export default rule;", "metadata": {"title": "ExhaustiveDeps.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/rules/ExhaustiveDeps.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/rules/ExhaustiveDeps.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757611.364991", "source_type": "github", "chunk_length": 220, "word_count": 23, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "78960fa867def88711ca5857eefcfedf", "content": "Copyright (c) Meta Platforms, Inc. and affiliates.   This source code is licensed under the MIT license found in the  LICENSE file in the root directory of this source tree.   eslint-disable no-for-of-loopsno-for-of-loops  import type Rule, Scope from eslint; import type  CallExpression, CatchClause, DoWhileStatement, Expression, Identifier, Node, Super, TryStatement,  from estree;  ts-expect-error untyped module import CodePathAnalyzer from..code-path-analysiscode-path-analyzer; import getAdditionalEffectHooksFromSettings from..sharedUtils;   Catch all identifiers that begin with use followed by an uppercase Latin  character to exclude identifiers like user.", "metadata": {"title": "RulesOfHooks.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757612.1480517", "source_type": "github", "chunk_length": 667, "word_count": 76, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "150e9bcc6e18d30fe5bde67290ab2a47", "content": "function isHookName(s: string): boolean  return s  use  useA-Z0-9.test(s);    We consider hooks to be a hook name identifier or a member expression  containing a hook name.", "metadata": {"title": "RulesOfHooks.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757612.1480517", "source_type": "github", "chunk_length": 172, "word_count": 25, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "1a503060b67c6eb72d2e2a34e2c294e2", "content": "function isHook(node: Node): boolean  if (node.type  Identifier)  return isHookName(node.name);  else if (node.type  MemberExpression!node.computed  isHook(node.property))  const obj  node.object; const isPascalCaseNameSpace  A-Z.; return obj.type  Identifier  isPascalCaseNameSpace.test(obj.name);  else  return false;     Checks if the node is a React component name. React component names must  always start with an uppercase letter.", "metadata": {"title": "RulesOfHooks.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757612.1480517", "source_type": "github", "chunk_length": 436, "word_count": 46, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "330f97bb93ff1598180a318ff339fe2f", "content": "function isComponentName(node: Node): boolean  return node.type  Identifier  A-Z.test(node.name);", "metadata": {"title": "RulesOfHooks.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757612.1480517", "source_type": "github", "chunk_length": 97, "word_count": 8, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "d9834f1083b255ee47bc485cb0e35b7a", "content": "function isReactFunction(node: Node, functionName: string): boolean  return ((name in node  node.name  functionName)  (node.type  MemberExpression  name in node.object  node.object.name  React  name in node.property  node.property.name  functionName));    Checks if the node is a callback argument of forwardRef. This render function  should follow the rules of hooks.", "metadata": {"title": "RulesOfHooks.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757612.1480517", "source_type": "github", "chunk_length": 368, "word_count": 43, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "1ca89407b622db5d703238414f13cdcf", "content": "function isForwardRefCallback(node: Node): boolean  return!!(node.parent  callee in node.parent  node.parent.callee  isReactFunction(node.parent.callee, forwardRef));    Checks if the node is a callback argument of React.memo. This anonymous  functional component should follow the rules of hooks.", "metadata": {"title": "RulesOfHooks.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757612.1480517", "source_type": "github", "chunk_length": 297, "word_count": 31, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "1ddad1221a89f66914e5f8f30db33a7b", "content": "function isMemoCallback(node: Node): boolean  return!!(node.parent  callee in node.parent  node.parent.callee  isReactFunction(node.parent.callee, memo));", "metadata": {"title": "RulesOfHooks.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757612.1480517", "source_type": "github", "chunk_length": 154, "word_count": 11, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "00ba553debb11bfb46b513775326e0f9", "content": "function isInsideComponentOrHook(node: Node  undefined): boolean  while (node)  const functionName  getFunctionName(node); if (functionName)  if (isComponentName(functionName)  isHook(functionName))  return true;   if (isForwardRefCallback(node)  isMemoCallback(node))  return true;  node  node.parent;  return false;", "metadata": {"title": "RulesOfHooks.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757612.1480517", "source_type": "github", "chunk_length": 317, "word_count": 26, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "9303251145b2dd0d55e0309b28f86a50", "content": "function isInsideDoWhileLoop(node: Node  undefined): node is DoWhileStatement  while (node)  if (node.type  DoWhileStatement)  return true;  node  node.parent;  return false;", "metadata": {"title": "RulesOfHooks.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757612.1480517", "source_type": "github", "chunk_length": 174, "word_count": 18, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "75811fbab078c781ee88533d894fe8fc", "content": "function isInsideTryCatch(node: Node  undefined,): node is TryStatement  CatchClause  while (node)  if (node.type  TryStatement  node.type  CatchClause)  return true;  node  node.parent;  return false;", "metadata": {"title": "RulesOfHooks.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757612.1480517", "source_type": "github", "chunk_length": 201, "word_count": 21, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "6d6875a49e259dd9d39bff7a361c7eb3", "content": "function getNodeWithoutReactNamespace(node: Expression  Super,): Expression  Identifier  Super  if (node.type  MemberExpression  node.object.type  Identifier  node.object.name  React  node.property.type  Identifier!node.computed)  return node.property;  return node;", "metadata": {"title": "RulesOfHooks.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757612.1480517", "source_type": "github", "chunk_length": 266, "word_count": 20, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "0907acceb965336de6ae4f9100542c5c", "content": "function isEffectIdentifier(node: Node, additionalHooks?: RegExp): boolean  const isBuiltInEffect  node.type  Identifier  (node.name  useEffect  node.name  useLayoutEffect  node.name  useInsertionEffect); if (isBuiltInEffect)  return true;   Check if this matches additional hooks configured by the user if (additionalHooks  node.type  Identifier)  return additionalHooks.test(node.name);  return false;", "metadata": {"title": "RulesOfHooks.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757612.1480517", "source_type": "github", "chunk_length": 403, "word_count": 38, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "d1620e31a0ea9dfc40930ae686c90827", "content": "function isUseEffectEventIdentifier(node: Node): boolean  return node.type  Identifier  node.name  useEffectEvent;", "metadata": {"title": "RulesOfHooks.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757612.1480517", "source_type": "github", "chunk_length": 114, "word_count": 9, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "f44b5db1b4e180a7ca95ad049fc22fd3", "content": "function useEffectEventError(fn: string  null, called: boolean): string   no function identifier, i.e. it is not assigned to a variable if (fn  null)  return (React Hook useEffectEvent can only be called at the top level of your component.   It cannot be passed down.);  return (fn is a function created with React Hook useEffectEvent, and can only be called from   Effects and Effect Events in the same component.  (called?:  It cannot be assigned to a variable or passed down.));", "metadata": {"title": "RulesOfHooks.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757612.1480517", "source_type": "github", "chunk_length": 481, "word_count": 76, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "cfe176d961a158a6ac07f8249144f3e5", "content": "function lastT(array: ArrayT): T  return arrayarray.length - 1 as T;  export default rule;", "metadata": {"title": "RulesOfHooks.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757612.1480517", "source_type": "github", "chunk_length": 90, "word_count": 13, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "b6221ca4a1aa77c8153bc2278ef1b41d", "content": "Copyright (c) Meta Platforms, Inc. and affiliates.   This source code is licensed under the MIT license found in the  LICENSE file in the root directory of this source tree.   eslint-disable no-for-of-loopsno-for-of-loops  import type SourceLocation as BabelSourceLocation from babeltypes; import  type CompilerDiagnosticOptions, type CompilerErrorDetailOptions, CompilerSuggestionOperation, LintRules, type LintRule, ErrorSeverity, LintRulePreset,  from babel-plugin-react-compiler; import type Linter, type Rule from eslint; import runReactCompiler, RunCacheEntry from.RunReactCompiler;", "metadata": {"title": "ReactCompiler.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/shared/ReactCompiler.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/shared/ReactCompiler.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757613.2204347", "source_type": "github", "chunk_length": 588, "word_count": 62, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "7a4d4899e98a57dd3c714c3f50299c6f", "content": "function assertExhaustive(_: never, errorMsg: string): never  throw new Error(errorMsg);", "metadata": {"title": "ReactCompiler.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/shared/ReactCompiler.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/shared/ReactCompiler.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757613.2204347", "source_type": "github", "chunk_length": 88, "word_count": 9, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "4b28ca8d50e8d27ac125c5483f93f90c", "content": "function getReactCompilerResult(context: Rule.RuleContext): RunCacheEntry   Compat with older versions of eslint const sourceCode  context.sourceCode?? context.getSourceCode(); const filename  context.filename?? context.getFilename(); const userOpts  context.options0??; const results  runReactCompiler(sourceCode, filename, userOpts,); return results;", "metadata": {"title": "ReactCompiler.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/shared/ReactCompiler.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/shared/ReactCompiler.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757613.2204347", "source_type": "github", "chunk_length": 352, "word_count": 28, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "703207e1a5f132b296c0723fb6286019", "content": "function hasFlowSuppression(program: RunCacheEntry, nodeLoc: BabelSourceLocation, suppressions: Arraystring,): boolean  for (const commentNode of program.flowSuppressions)  if (suppressions.includes(commentNode.code)  commentNode.line  nodeLoc.start.line - 1)  return true;   return false;", "metadata": {"title": "ReactCompiler.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/shared/ReactCompiler.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/shared/ReactCompiler.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757613.2204347", "source_type": "github", "chunk_length": 289, "word_count": 23, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "9206b467dde076b36b71219b8b9d6c9d", "content": "Copyright (c) Meta Platforms, Inc. and affiliates.   This source code is licensed under the MIT license found in the  LICENSE file in the root directory of this source tree.  import  Rule  from eslint; const SETTINGS_KEY  react-hooks; const SETTINGS_ADDITIONAL_EFFECT_HOOKS_KEY  additionalEffectHooks; export function getAdditionalEffectHooksFromSettings(settings: Rule.RuleContextsettings,): RegExp  undefined  const additionalHooks  settingsSETTINGS_KEY?.SETTINGS_ADDITIONAL_EFFECT_HOOKS_KEY; if (additionalHooks! null  typeof additionalHooks  string)  return new RegExp(additionalHooks);  return undefined;", "metadata": {"title": "Utils.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/shared/Utils.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/shared/Utils.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757614.769787", "source_type": "github", "chunk_length": 609, "word_count": 59, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "57d239b0e7dbdff7e5b263a1fd8e93c1", "content": "import Expression, Identifier, Node from estree-jsx;   This file augments the estree types to include types that are not built-in to estree or estree-jsx.  This is necessary because the estree types are used by ESLint, and ESLint does not natively support  TypeScript or Flow types. Since were not using a ton of them, we can just add them here, rather than  installing typescript estree or flow estree types.   This also adds support for the AST mutation that the Exhaustive deps rule does to add parent nodes.  declare module estree   The Exhaustive deps rule mutates the AST to add parent nodes for efficient traversal.  We need to augment the estree types to support that. interface BaseNode  parent?: Node;   Adding types that arent built-in to estree or estree-jsx.  Namely, the specific TS and Flow types that were using.", "metadata": {"title": "estree.d.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/types/estree.d.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/types/estree.d.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757615.8097644", "source_type": "github", "chunk_length": 828, "word_count": 135, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "97c947b4f31fd447535375c96c6290ca", "content": "interface AsExpression extends BaseExpression  type: AsExpression; expression: Expression  Identifier;  interface OptionalCallExpression extends BaseCallExpression  type: OptionalCallExpression;  interface OptionalMemberExpression extends MemberExpression  type: OptionalMemberExpression;  interface TSAsExpression extends BaseExpression  type: TSAsExpression; expression: Expression  Identifier;  interface TSTypeQuery extends BaseNode  type: TSTypeQuery; exprName: Identifier;  interface TSTypeReference extends BaseNode  type: TSTypeReference; typeName: Identifier;  interface TypeCastExpression extends BaseExpression  type: TypeCastExpression; expression: Expression  Identifier;   Extend the set of known Expression types interface ExpressionMap  AsExpression: AsExpression; OptionalCallExpression: OptionalCallExpression; OptionalMemberExpression: OptionalMemberExpression; TSAsExpression: TSAsExpression; TypeCastExpression: TypeCastExpression;   Extend the set of known Node types interface NodeMap  AsExpression: AsExpression; OptionalCallExpression: OptionalCallExpression; OptionalMemberExpression: OptionalMemberExpression; TSAsExpression: TSAsExpression; TSTypeQuery: TSTypeQuery; TSTypeReference: TSTypeReference; TypeCastExpression: TypeCastExpression;", "metadata": {"title": "estree.d.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/types/estree.d.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/types/estree.d.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757615.8097644", "source_type": "github", "chunk_length": 1268, "word_count": 97, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "024f0c67362dac828bda6c33e5711835", "content": "In order to support the __EXPERIMENTAL__ global in TypeScript,  we need to declare it here. The value of this is set in both  the jest setup and CI build declare const __EXPERIMENTAL__: boolean;", "metadata": {"title": "global.d.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/types/global.d.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/types/global.d.ts", "file_type": "code", "technology": "react", "professional_context": "getting_started", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757616.5665712", "source_type": "github", "chunk_length": 194, "word_count": 33, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "03695570526ad48afd6640e039d75455", "content": "Copyright (c) Meta Platforms, Inc. and affiliates.   This source code is licensed under the MIT license found in the  LICENSE file in the root directory of this source tree.   emails react-core  use strict; export const defaultPointerId  1; export const defaultPointerSize  23; export const defaultBrowserChromeSize  50;   Button property  This property only guarantees to indicate which buttons are pressed during events caused by pressing or  releasing one or multiple buttons. As such, it is not reliable for events such as mouseenter, mouseleave,  mouseover, mouseout or mousemove. Furthermore, the semantics differ for PointerEvent, where the value  for pointermove will always be -1.", "metadata": {"title": "constants.js", "url": "https://github.com/facebook/react/blob/main/packages/dom-event-testing-library/constants.js", "repo": "facebook/react", "file_path": "packages/dom-event-testing-library/constants.js", "file_type": "code", "technology": "react", "professional_context": "documentation", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757586.32865", "source_type": "github", "chunk_length": 689, "word_count": 99, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "ea5647a3da7f5ef61942e1e0f5014483", "content": "export const buttonType    no change since last event none: -1,  left-mouse  touch contact  pen contact primary: 0,  right-mouse  pen barrel button secondary: 2,  middle mouse auxiliary: 1,  back mouse back: 3,  forward mouse forward: 4,  pen eraser eraser: 5,;   Buttons bitmask  export const buttonsType   none: 0,  left-mouse  touch contact  pen contact primary: 1,  right-mouse  pen barrel button secondary: 2,  middle mouse auxiliary: 4,  back mouse back: 8,  forward mouse forward: 16,  pen eraser eraser: 32,;", "metadata": {"title": "constants.js", "url": "https://github.com/facebook/react/blob/main/packages/dom-event-testing-library/constants.js", "repo": "facebook/react", "file_path": "packages/dom-event-testing-library/constants.js", "file_type": "code", "technology": "react", "professional_context": "documentation", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757586.32865", "source_type": "github", "chunk_length": 516, "word_count": 75, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "bef04f57d6afcec4b8a23463abd96e25", "content": "Copyright (c) Meta Platforms, Inc. and affiliates.   This source code is licensed under the MIT license found in the  LICENSE file in the root directory of this source tree.   v0.17.1 declare module hermes-eslint   https:fburl.com2vikhmaa type ParseForESLintOptions     Whether the whole script is executed under node.js environment.  When enabled, the scope manager adds a function scope immediately following the global scope.  Defaults to false.  globalReturn: boolean;   The identifier thats used for JSX Element creation (after transpilation).  This should not be a member expression - just the root identifier (i.e. use React instead of React.createElement).   To use the new global JSX transform function, you can explicitly set this to null.   Defaults to React.  jsxPragma: string  null;   The identifier thats used for JSX fragment elements (after transpilation).", "metadata": {"title": "hermes-eslint.d.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/types/hermes-eslint.d.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/types/hermes-eslint.d.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757617.34938", "source_type": "github", "chunk_length": 873, "word_count": 123, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "9dba03c9b10a5332c91c720205f01b10", "content": "If null, assumes transpilation will always use a member on jsxFactory (i.e. React.Fragment).  This should not be a member expression - just the root identifier (i.e. use h instead of h.Fragment).  Defaults to null.  jsxFragmentName: string  null;   The source type of the script.  sourceType: script  module;   Ignore fbt  JSX elements when adding references to the module-level React variable.  FBT is JSX thats transformed to non-JSX and thus references differently   https:facebook.github.iofbt  fbt: boolean;   Support experimental component syntax   Defaults to true.  enableExperimentalComponentSyntax?: boolean;; export function parse(code: string, options?: PartialParseForESLintOptions);", "metadata": {"title": "hermes-eslint.d.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/types/hermes-eslint.d.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/types/hermes-eslint.d.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757617.34938", "source_type": "github", "chunk_length": 696, "word_count": 87, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "f5d0782b489b575441cbdb79a0898a06", "content": "Copyright (c) Meta Platforms, Inc. and affiliates.   This source code is licensed under the MIT license found in the  LICENSE file in the root directory of this source tree.   v0.17.1 declare module hermes-parser  type HermesParserOptions   allowReturnOutsideFunction?: boolean; babel?: boolean; flow?: all  detect; enableExperimentalComponentSyntax?: boolean; sourceFilename?: string; sourceType?: module  script  unambiguous; tokens?: boolean;; export function parse(code: string, options: PartialHermesParserOptions);", "metadata": {"title": "hermes-parser.d.ts", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/types/hermes-parser.d.ts", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/src/types/hermes-parser.d.ts", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757618.1044888", "source_type": "github", "chunk_length": 520, "word_count": 58, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "729b00691ff3fe1fdb84d9ca6cdcfd3b", "content": "extends: tsconfigstrictesttsconfig.json, compilerOptions:  module: ES2015, target: ES2015, moduleResolution: Bundler, lib: ES2020, dom, sourceMap: false, types: estree-jsx, node, downlevelIteration: true, paths:  babel-plugin-react-compiler:....compilerpackagesbabel-plugin-react-compilersrc, jsx: react-jsxdev, rootDir:...., baseUrl:., typeRoots:....node_modulestypes, checkJs: false, allowJs: false,  weaken strictness from preset importsNotUsedAsValues: remove, noUncheckedIndexedAccess: false, noUnusedParameters: false, useUnknownInCatchVariables: true,  ideally turn off only during dev, or on a per-file basis noUnusedLocals: false, removeComments: true,, include: src.ts, __tests__.ts", "metadata": {"title": "tsconfig.json", "url": "https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/tsconfig.json", "repo": "facebook/react", "file_path": "packages/eslint-plugin-react-hooks/tsconfig.json", "file_type": "documentation", "technology": "react", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757618.8503435", "source_type": "github", "chunk_length": 692, "word_count": 60, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "c673847617baafa8f058b1210a9f0f14", "content": "Copyright (c) Meta Platforms, Inc. and affiliates.   This source code is licensed under the MIT license found in the  LICENSE file in the root directory of this source tree.  import  as SchedulerMock from schedulerunstable_mock; import diff from jest-diff; import equals from jestexpect-utils; import enqueueTask from.enqueueTask; import simulateBrowserEventDispatch from.simulateBrowserEventDispatch; import  clearLogs, clearWarnings, clearErrors, createLogAssertion,  from.consoleMock; export getDebugInfo from.debugInfo; export act, serverAct from.internalAct; const assertConsoleLogsCleared  require(internal-test-utilsconsoleMock); import thrownErrors, actingUpdatesScopeDepth from.internalAct;", "metadata": {"title": "ReactInternalTestUtils.js", "url": "https://github.com/facebook/react/blob/main/packages/internal-test-utils/ReactInternalTestUtils.js", "repo": "facebook/react", "file_path": "packages/internal-test-utils/ReactInternalTestUtils.js", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757619.8949556", "source_type": "github", "chunk_length": 699, "word_count": 68, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "61f05e6130fdf0249f13c2a07d001d00", "content": "Copyright (c) Meta Platforms, Inc. and affiliates.   This source code is licensed under the MIT license found in the  LICENSE file in the root directory of this source tree.   emails react-core  use strict;   Change environment support for PointerEvent.", "metadata": {"title": "domEnvironment.js", "url": "https://github.com/facebook/react/blob/main/packages/dom-event-testing-library/domEnvironment.js", "repo": "facebook/react", "file_path": "packages/dom-event-testing-library/domEnvironment.js", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757587.0735548", "source_type": "github", "chunk_length": 253, "word_count": 38, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "7e19f87472a693debcc3aa548d01839b", "content": "Copyright (c) Meta Platforms, Inc. and affiliates.   This source code is licensed under the MIT license found in the  LICENSE file in the root directory of this source tree.   emails react-core  use strict; import  buttonType, buttonsType, defaultPointerId, defaultPointerSize, defaultBrowserChromeSize,  from.constants; import  as domEvents from.domEvents; import hasPointerEvent, platform from.domEnvironment; import  as touchStore from.touchStore;   Converts a PointerEvent payload to a Touch", "metadata": {"title": "domEventSequences.js", "url": "https://github.com/facebook/react/blob/main/packages/dom-event-testing-library/domEventSequences.js", "repo": "facebook/react", "file_path": "packages/dom-event-testing-library/domEventSequences.js", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757587.8391993", "source_type": "github", "chunk_length": 495, "word_count": 59, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "a81768b73234ca4bf688a34895c66796", "content": "function createTouch(target, payload)  const  height  defaultPointerSize, pageX, pageY, pointerId, pressure  1, twist  0, width  defaultPointerSize, x  0, y  0,   payload; return  clientX: x, clientY: y, force: pressure, identifier: pointerId, pageX: pageX  x, pageY: pageY  y, radiusX: width  2, radiusY: height  2, rotationAngle: twist, target, screenX: x, screenY: y  defaultBrowserChromeSize,;    Converts a PointerEvent to a TouchEvent", "metadata": {"title": "domEventSequences.js", "url": "https://github.com/facebook/react/blob/main/packages/dom-event-testing-library/domEventSequences.js", "repo": "facebook/react", "file_path": "packages/dom-event-testing-library/domEventSequences.js", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757587.8391993", "source_type": "github", "chunk_length": 440, "word_count": 55, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "eeb467c2c95e0c4199fccafddfa50f85", "content": "function createTouchEventPayload(target, touch, payload)  const  altKey  false, ctrlKey  false, metaKey  false, preventDefault, shiftKey  false, timeStamp,   payload; return  altKey, changedTouches: touch, ctrlKey, metaKey, preventDefault, shiftKey, targetTouches: touchStore.getTargetTouches(target), timeStamp, touches: touchStore.getTouches(),;", "metadata": {"title": "domEventSequences.js", "url": "https://github.com/facebook/react/blob/main/packages/dom-event-testing-library/domEventSequences.js", "repo": "facebook/react", "file_path": "packages/dom-event-testing-library/domEventSequences.js", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757587.8391993", "source_type": "github", "chunk_length": 347, "word_count": 29, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "d7f46d0b231a51373706ac63bfeb57be", "content": "function createEvent(type, data)  const event  document.createEvent(CustomEvent); event.initCustomEvent(type, true, true); if (data! null)  Object.keys(data).forEach(key   const value  datakey; if (key  timeStamp!value)  return;  Object.defineProperty(event, key, value););  return event;", "metadata": {"title": "domEvents.js", "url": "https://github.com/facebook/react/blob/main/packages/dom-event-testing-library/domEvents.js", "repo": "facebook/react", "file_path": "packages/dom-event-testing-library/domEvents.js", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757588.5801373", "source_type": "github", "chunk_length": 288, "word_count": 25, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "c0ec51979f62116a5cdc90c7c535d319", "content": "function createGetModifierState(keyArg, data)  if (keyArg  Alt)  return data.altKey  false;  if (keyArg  Control)  return data.ctrlKey  false;  if (keyArg  Meta)  return data.metaKey  false;  if (keyArg  Shift)  return data.shiftKey  false;", "metadata": {"title": "domEvents.js", "url": "https://github.com/facebook/react/blob/main/packages/dom-event-testing-library/domEvents.js", "repo": "facebook/react", "file_path": "packages/dom-event-testing-library/domEvents.js", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757588.5801373", "source_type": "github", "chunk_length": 240, "word_count": 27, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "ac58d8d63576001e215df671da34578e", "content": "function createKeyboardEvent(type,  altKey  false, ctrlKey  false, isComposing  false, key, metaKey  false, preventDefault  emptyFunction, shiftKey  false,,)  const modifierState  altKey, ctrlKey, metaKey, shiftKey; return createEvent(type,  altKey, ctrlKey, getModifierState(keyArg)  return createGetModifierState(keyArg, modifierState);, isComposing, key, metaKey, preventDefault, shiftKey,);", "metadata": {"title": "domEvents.js", "url": "https://github.com/facebook/react/blob/main/packages/dom-event-testing-library/domEvents.js", "repo": "facebook/react", "file_path": "packages/dom-event-testing-library/domEvents.js", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757588.5801373", "source_type": "github", "chunk_length": 394, "word_count": 34, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "235aae9353442793defc85b4ca8734a8", "content": "function createMouseEvent(type,  altKey  false, button  buttonType.none, buttons  buttonsType.none, ctrlKey  false, detail  1, metaKey  false, movementX  0, movementY  0, offsetX  0, offsetY  0, pageX, pageY, preventDefault  emptyFunction, screenX, screenY, shiftKey  false, timeStamp, x  0, y  0,,)  const modifierState  altKey, ctrlKey, metaKey, shiftKey; return createEvent(type,  altKey, button, buttons, clientX: x, clientY: y, ctrlKey, detail, getModifierState(keyArg)  return createGetModifierState(keyArg, modifierState);, metaKey, movementX, movementY, offsetX, offsetY, pageX: pageX  x, pageY: pageY  y, preventDefault, screenX: screenX  0? screenX: x, screenY: screenY  0? screenY: y  defaultBrowserChromeSize, shiftKey, timeStamp,);", "metadata": {"title": "domEvents.js", "url": "https://github.com/facebook/react/blob/main/packages/dom-event-testing-library/domEvents.js", "repo": "facebook/react", "file_path": "packages/dom-event-testing-library/domEvents.js", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757588.5801373", "source_type": "github", "chunk_length": 744, "word_count": 81, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "b712fddd755fa9644ffec2f4495ce5b3", "content": "Copyright (c) Meta Platforms, Inc. and affiliates.   This source code is licensed under the MIT license found in the  LICENSE file in the root directory of this source tree.   emails react-core  use strict; import buttonType, buttonsType from.constants; import  as domEvents from.domEvents; import  as domEventSequences from.domEventSequences; import hasPointerEvent, setPointerEvent, platform from.domEnvironment; import describeWithPointerEvent, testWithPointerType from.testHelpers; const createEventTarget  node  (node,   Simple events abstraction.", "metadata": {"title": "index.js", "url": "https://github.com/facebook/react/blob/main/packages/dom-event-testing-library/index.js", "repo": "facebook/react", "file_path": "packages/dom-event-testing-library/index.js", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757589.3262362", "source_type": "github", "chunk_length": 552, "word_count": 61, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "ede2b214831bd5fc77e73493125fb480", "content": "blur(payload)  node.dispatchEvent(domEvents.blur(payload)); node.dispatchEvent(domEvents.focusOut(payload));, click(payload)  node.dispatchEvent(domEvents.click(payload));, focus(payload)  node.dispatchEvent(domEvents.focus(payload)); node.dispatchEvent(domEvents.focusIn(payload)); node.focus();, keydown(payload)  node.dispatchEvent(domEvents.keydown(payload));, keyup(payload)  node.dispatchEvent(domEvents.keyup(payload));, scroll(payload)  node.dispatchEvent(domEvents.scroll(payload));, virtualclick(payload)  node.dispatchEvent(domEvents.virtualclick(payload));,   PointerEvent abstraction.  Dispatches the expected sequence of PointerEvents, MouseEvents, and  TouchEvents for a given environment.", "metadata": {"title": "index.js", "url": "https://github.com/facebook/react/blob/main/packages/dom-event-testing-library/index.js", "repo": "facebook/react", "file_path": "packages/dom-event-testing-library/index.js", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757589.3262362", "source_type": "github", "chunk_length": 704, "word_count": 32, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "3676a062ef4084a68993f716f4f0c7cc", "content": "contextmenu(payload, options)  domEventSequences.contextmenu(node, payload, options);,  node no longer receives events for the pointer pointercancel(payload)  domEventSequences.pointercancel(node, payload);,  node dispatches down events pointerdown(payload)  domEventSequences.pointerdown(node, payload);,  node dispatches move events (pointer is not down) pointerhover(payload)  domEventSequences.pointerhover(node, payload);,  node dispatches move events (pointer is down) pointermove(payload)  domEventSequences.pointermove(node, payload);,  node dispatches enter  over events pointerenter(payload)  domEventSequences.pointerenter(node, payload);,  node dispatches exit  leave events pointerexit(payload)  domEventSequences.pointerexit(node, payload);,  node dispatches up events pointerup(payload)  domEventSequences.pointerup(node, payload);,   Gesture abstractions.", "metadata": {"title": "index.js", "url": "https://github.com/facebook/react/blob/main/packages/dom-event-testing-library/index.js", "repo": "facebook/react", "file_path": "packages/dom-event-testing-library/index.js", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757589.3262362", "source_type": "github", "chunk_length": 871, "word_count": 69, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "ef6d56e5e89f3d1c318b9d6bf3db733b", "content": "Helpers for event sequences expected in a gesture.  target.tap(pointerType: touch)  tap(payload)  domEventSequences.pointerdown(payload); domEventSequences.pointerup(payload);,   Utilities  setBoundingClientRect(x, y, width, height)  node.getBoundingClientRect  function ()  return  width, height, left: x, right: x  width, top: y, bottom: y  height,;;,); const resetActivePointers  domEventSequences.resetActivePointers; export  buttonType, buttonsType, createEventTarget, describeWithPointerEvent, platform, hasPointerEvent, resetActivePointers, setPointerEvent, testWithPointerType,;", "metadata": {"title": "index.js", "url": "https://github.com/facebook/react/blob/main/packages/dom-event-testing-library/index.js", "repo": "facebook/react", "file_path": "packages/dom-event-testing-library/index.js", "file_type": "code", "technology": "react", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757589.3262362", "source_type": "github", "chunk_length": 586, "word_count": 47, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "19979e17a4fc5c6c061a90b51d9f5a61", "content": "private: true, name: dom-event-testing-library, version: 0.0.0", "metadata": {"title": "package.json", "url": "https://github.com/facebook/react/blob/main/packages/dom-event-testing-library/package.json", "repo": "facebook/react", "file_path": "packages/dom-event-testing-library/package.json", "file_type": "documentation", "technology": "react", "professional_context": "documentation", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761757590.0925279", "source_type": "github", "chunk_length": 62, "word_count": 6, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "3368bfc3f02c66e7cc9d2d0c777d4a34", "content": "A collection of.gitignore templates This is GitHubs collection of.gitignoreman file templates. We use this list to populate the.gitignore template choosers available in the GitHub.com interface when creating new repositories and files. For more information about how.gitignore files work, and how to use them, the following resources are a great place to start: - The Ignoring Files chapterchapter of the Pro Gitprogit book. - The Ignoring Files articlehelp on the GitHub Help site. - The gitignore(5)man manual page. man: https:git-scm.comdocsgitignore help: https:help.github.comarticlesignoring-files chapter: https:git-scm.combookenv2Git-Basics-Recording-Changes-to-the-Repository_ignoring progit: https:git-scm.combook", "metadata": {"title": "A collection of `.gitignore` templates", "url": "https://github.com/github/gitignore/blob/main/README.md", "repo": "github/gitignore", "file_path": "README.md", "file_type": "markdown", "technology": "gitignore", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758507.781881", "source_type": "github", "chunk_length": 723, "word_count": 85, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "115537c304809e0fd272ac83b56350e3", "content": "Folder structure We support a collection of templates, organized in this way:", "metadata": {"title": "A collection of `.gitignore` templates", "url": "https://github.com/github/gitignore/blob/main/README.md", "repo": "github/gitignore", "file_path": "README.md", "file_type": "markdown", "technology": "gitignore", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758507.781881", "source_type": "github", "chunk_length": 77, "word_count": 12, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "8033e46d150fc47c3de83f8a3111a889", "content": "- The root folder contains templates in common use, to help people get started with popular programming languages and technologies. These define a meaningful set of rules to help get started, and ensure you are not committing unimportant files into your repository. - Global(.Global) contains templates for various editors, tools and operating systems that can be used in different situations. It is recommended that you either add these to your global template(https:docs.github.comenget-startedgetting-started-with-gitignoring-filesconfiguring-ignored-files-for-all-repositories-on-your-computer) or merge these rules into your project-specific templates if you want to use them permanently. - community(.community) contains specialized templates for other popular languages, tools and project, which dont currently belong in the mainstream templates. These should be added to your project-specific templates when you decide to adopt the framework or tool.", "metadata": {"title": "A collection of `.gitignore` templates", "url": "https://github.com/github/gitignore/blob/main/README.md", "repo": "github/gitignore", "file_path": "README.md", "file_type": "markdown", "technology": "gitignore", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758507.781881", "source_type": "github", "chunk_length": 958, "word_count": 124, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "c7ecf67180d4ca87b9ba29ed6651d800", "content": "What makes a good template? A template should contain a set of rules to help Git repositories work with a specific programming language, framework, tool or environment. If its not possible to curate a small set of useful rules for this situation, then the template is not a good fit for this collection. If a template is mostly a list of files installed by a particular version of some software (e.g. a PHP framework), it could live under the community directory. See versioned templates(versioned-templates) for more details. If you have a small set of rules, or want to support a technology that is not widely in use, and still believe this will be helpful to others, please read the section about specialized templates(specialized-templates) for more details. Include details when opening pull request if the template is important and visible. We may not accept it immediately, but we can promote it to the root at a later date based on interest.", "metadata": {"title": "A collection of `.gitignore` templates", "url": "https://github.com/github/gitignore/blob/main/README.md", "repo": "github/gitignore", "file_path": "README.md", "file_type": "markdown", "technology": "gitignore", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758507.781881", "source_type": "github", "chunk_length": 949, "word_count": 160, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "a5ede1a7fd3aa50fb44e01698ca65342", "content": "Please also understand that we cant list every tool that ever existed. Our aim is to curate a collection of the _most common and helpful_ templates, not to make sure we cover every project possible. If we choose not to include your language, tool, or project, its not because its not awesome.", "metadata": {"title": "A collection of `.gitignore` templates", "url": "https://github.com/github/gitignore/blob/main/README.md", "repo": "github/gitignore", "file_path": "README.md", "file_type": "markdown", "technology": "gitignore", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758507.781881", "source_type": "github", "chunk_length": 292, "word_count": 52, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "eee09d7ff2c4be1736767bba5461aa30", "content": "Contributing guidelines Wed love for you to help us improve this project. To help us keep this collection high quality, we request that contributions adhere to the following guidelines. - Provide a link to the application or projects homepage. Unless its extremely popular, theres a chance the maintainers dont know about or use the language, framework, editor, app, or project your change applies to. - Provide links to documentation supporting the change youre making. Current, canonical documentation mentioning the files being ignored is best. If documentation isnt available to support your change, do the best you can to explain what the files being ignored are for.", "metadata": {"title": "A collection of `.gitignore` templates", "url": "https://github.com/github/gitignore/blob/main/README.md", "repo": "github/gitignore", "file_path": "README.md", "file_type": "markdown", "technology": "gitignore", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758507.781881", "source_type": "github", "chunk_length": 672, "word_count": 106, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "85325b12df05aa863ec3011f3e43010c", "content": "- Explain why youre making a change. Even if it seems self-evident, please take a sentence or two to tell us why your change or addition should happen. Its especially helpful to articulate why this change applies to _everyone_ who works with the applicable technology, rather than just you or your team. - Please consider the scope of your change. If your change is specific to a certain language or framework, then make sure the change is made to the template for that language or framework, rather than to the template for an editor, tool, or operating system. - Please only modify _one template_ per pull request. This helps keep pull requests and feedback focused on a specific project or technology. In general, the more you can do to help us understand the change youre making, the more likely well be to accept your contribution quickly.", "metadata": {"title": "A collection of `.gitignore` templates", "url": "https://github.com/github/gitignore/blob/main/README.md", "repo": "github/gitignore", "file_path": "README.md", "file_type": "markdown", "technology": "gitignore", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758507.781881", "source_type": "github", "chunk_length": 844, "word_count": 146, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "ab3c39c53f91664ddc3650abb89b14e2", "content": "Versioned templates Some templates can change greatly between versions, and if you wish to contribute to this repository we need to follow this specific flow: - the template at the root should be the current supported version - the template at the root should not have a version in the filename (i.e. evergreen) - previous versions of templates should live under community - previous versions of the template should embed the version in the filename, for readability This helps ensure users get the latest version (because theyll use whatever is at the root) but helps maintainers support older versions still in the wild.", "metadata": {"title": "A collection of `.gitignore` templates", "url": "https://github.com/github/gitignore/blob/main/README.md", "repo": "github/gitignore", "file_path": "README.md", "file_type": "markdown", "technology": "gitignore", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758507.781881", "source_type": "github", "chunk_length": 622, "word_count": 103, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "dbc050797e539c41a91035d4539f416a", "content": "Specialized templates If you have a template that you would like to contribute, but it isnt quite mainstream, please consider adding this to the community directory under a folder that best suits where it belongs. The rules in your specialized template should be specific to the framework or tool, and any additional templates should be mentioned in a comment in the header of the template. For example, this template might live at communityDotNetInforCRM.gitignore: gitignore", "metadata": {"title": "A collection of `.gitignore` templates", "url": "https://github.com/github/gitignore/blob/main/README.md", "repo": "github/gitignore", "file_path": "README.md", "file_type": "markdown", "technology": "gitignore", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758507.781881", "source_type": "github", "chunk_length": 476, "word_count": 74, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "01ea67d616c9abf8f8d2cfc95eb534a8", "content": "gitignore template for InforCRM (formerly SalesLogix)", "metadata": {"title": "A collection of `.gitignore` templates", "url": "https://github.com/github/gitignore/blob/main/README.md", "repo": "github/gitignore", "file_path": "README.md", "file_type": "markdown", "technology": "gitignore", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758507.781881", "source_type": "github", "chunk_length": 53, "word_count": 6, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "8c7f481ce21d00839e5ee2565ad7bae2", "content": "website: https:www.infor.comproduct-summarycxinfor-crm", "metadata": {"title": "A collection of `.gitignore` templates", "url": "https://github.com/github/gitignore/blob/main/README.md", "repo": "github/gitignore", "file_path": "README.md", "file_type": "markdown", "technology": "gitignore", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758507.781881", "source_type": "github", "chunk_length": 54, "word_count": 2, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "d2bff37815fc5745f73fc402a014d5a2", "content": "", "metadata": {"title": "A collection of `.gitignore` templates", "url": "https://github.com/github/gitignore/blob/main/README.md", "repo": "github/gitignore", "file_path": "README.md", "file_type": "markdown", "technology": "gitignore", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758507.781881", "source_type": "github", "chunk_length": 0, "word_count": 0, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "ebcc32d55ce5ec9d290a4ed4429ab382", "content": "Recommended: VisualStudio.gitignore", "metadata": {"title": "A collection of `.gitignore` templates", "url": "https://github.com/github/gitignore/blob/main/README.md", "repo": "github/gitignore", "file_path": "README.md", "file_type": "markdown", "technology": "gitignore", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758507.781881", "source_type": "github", "chunk_length": 35, "word_count": 2, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "137b7d5f0c6d3f128b0d56e40b0a5e30", "content": "Ignore model files that are auto-generated ModelIndex.xml ExportedFiles.xml", "metadata": {"title": "A collection of `.gitignore` templates", "url": "https://github.com/github/gitignore/blob/main/README.md", "repo": "github/gitignore", "file_path": "README.md", "file_type": "markdown", "technology": "gitignore", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758507.781881", "source_type": "github", "chunk_length": 75, "word_count": 8, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "d3560726adce370a14197f55a564ab52", "content": "Ignore deployment files MmodelDdeployment", "metadata": {"title": "A collection of `.gitignore` templates", "url": "https://github.com/github/gitignore/blob/main/README.md", "repo": "github/gitignore", "file_path": "README.md", "file_type": "markdown", "technology": "gitignore", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758507.781881", "source_type": "github", "chunk_length": 41, "word_count": 4, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "e613993cfb8e9933d1f9fadef867b8fb", "content": "Force include portal SupportFiles!ModelPortalSupportFilesBbin!ModelPortalPortalTemplatesSupportFilesBbin", "metadata": {"title": "A collection of `.gitignore` templates", "url": "https://github.com/github/gitignore/blob/main/README.md", "repo": "github/gitignore", "file_path": "README.md", "file_type": "markdown", "technology": "gitignore", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758507.781881", "source_type": "github", "chunk_length": 104, "word_count": 4, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "d820d0de0d920139993d6da62dc06e68", "content": "Contributing workflow Heres how we suggest you go about proposing a change to this project: 1. Fork this projectfork to your account. 2. Create a branchbranch for the change you intend to make. 3. Make your changes to your fork. 4. Send a pull requestpr from your forks branch to our main branch. Using the web-based interface to make changes is fine too, and will help you by automatically forking the project and prompting to send a pull request too. fork: https:help.github.comarticlesfork-a-repo branch: https:help.github.comarticlescreating-and-deleting-branches-within-your-repository pr: https:help.github.comarticlesusing-pull-requests", "metadata": {"title": "A collection of `.gitignore` templates", "url": "https://github.com/github/gitignore/blob/main/README.md", "repo": "github/gitignore", "file_path": "README.md", "file_type": "markdown", "technology": "gitignore", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758507.781881", "source_type": "github", "chunk_length": 643, "word_count": 86, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "5377b77bf9d4e7f32dbc1f514284e2e8", "content": "License CC0-1.0(.LICENSE).", "metadata": {"title": "A collection of `.gitignore` templates", "url": "https://github.com/github/gitignore/blob/main/README.md", "repo": "github/gitignore", "file_path": "README.md", "file_type": "markdown", "technology": "gitignore", "professional_context": "configuration", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758507.781881", "source_type": "github", "chunk_length": 26, "word_count": 2, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "b8b94509b2790abe404f0536086b522a", "content": "", "metadata": {"title": "TypeScript", "url": "https://github.com/microsoft/TypeScript/blob/main/README.md", "repo": "microsoft/TypeScript", "file_path": "README.md", "file_type": "markdown", "technology": "typescript", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758497.9818275", "source_type": "github", "chunk_length": 0, "word_count": 0, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "32834870352b19e4811b0468a61428e2", "content": "TypeScript!CI(https:github.commicrosoftTypeScriptactionsworkflowsci.ymlbadge.svg)(https:github.commicrosoftTypeScriptactionsworkflowsci.yml)!npm version(https:badge.fury.iojstypescript.svg)(https:www.npmjs.compackagetypescript)!Downloads(https:img.shields.ionpmdmtypescript.svg)(https:www.npmjs.compackagetypescript)!OpenSSF Scorecard(https:api.securityscorecards.devprojectsgithub.commicrosoftTypeScriptbadge)(https:securityscorecards.devviewer?urigithub.commicrosoftTypeScript) TypeScript(https:www.typescriptlang.org) is a language for application-scale JavaScript. TypeScript adds optional types to JavaScript that support tools for large-scale JavaScript applications for any browser, for any host, on any OS. TypeScript compiles to readable, standards-based JavaScript. Try it out at the playground(https:www.typescriptlang.orgplay), and stay up to date via our blog(https:blogs.msdn.microsoft.comtypescript) and Twitter account(https:twitter.comtypescript). Find others who are using TypeScript at our community page(https:www.typescriptlang.orgcommunity).", "metadata": {"title": "TypeScript", "url": "https://github.com/microsoft/TypeScript/blob/main/README.md", "repo": "microsoft/TypeScript", "file_path": "README.md", "file_type": "markdown", "technology": "typescript", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758497.9818275", "source_type": "github", "chunk_length": 1063, "word_count": 65, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "cf2dcc3a2e6bca539b7b187884e89392", "content": "Installing For the latest stable version: bash npm install -D typescript  For our nightly builds: bash npm install -D typescriptnext", "metadata": {"title": "TypeScript", "url": "https://github.com/microsoft/TypeScript/blob/main/README.md", "repo": "microsoft/TypeScript", "file_path": "README.md", "file_type": "markdown", "technology": "typescript", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758497.9818275", "source_type": "github", "chunk_length": 132, "word_count": 20, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "3886118827452680dba2a283b82fe942", "content": "Contribute There are many ways to contribute(https:github.commicrosoftTypeScriptblobmainCONTRIBUTING.md) to TypeScript.  Submit bugs(https:github.commicrosoftTypeScriptissues) and help us verify fixes as they are checked in.  Review the source code changes(https:github.commicrosoftTypeScriptpulls).  Engage with other TypeScript users and developers on StackOverflow(https:stackoverflow.comquestionstaggedtypescript).  Help each other in the TypeScript Community Discord(https:discord.ggtypescript).  Join the typescript(https:twitter.comsearch?q23TypeScript) discussion on Twitter.  Contribute bug fixes(https:github.commicrosoftTypeScriptblobmainCONTRIBUTING.md). This project has adopted the Microsoft Open Source Code of Conduct(https:opensource.microsoft.comcodeofconduct). For more information see the Code of Conduct FAQ(https:opensource.microsoft.comcodeofconductfaq) or contact opencodemicrosoft.com(mailto:opencodemicrosoft.com) with any additional questions or comments.", "metadata": {"title": "TypeScript", "url": "https://github.com/microsoft/TypeScript/blob/main/README.md", "repo": "microsoft/TypeScript", "file_path": "README.md", "file_type": "markdown", "technology": "typescript", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758497.9818275", "source_type": "github", "chunk_length": 982, "word_count": 81, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "83bc5ba269ae3eed68ea9b70c5fc2453", "content": "Documentation  TypeScript in 5 minutes(https:www.typescriptlang.orgdocshandbooktypescript-in-5-minutes.html)  Programming handbook(https:www.typescriptlang.orgdocshandbookintro.html)  Homepage(https:www.typescriptlang.org)", "metadata": {"title": "TypeScript", "url": "https://github.com/microsoft/TypeScript/blob/main/README.md", "repo": "microsoft/TypeScript", "file_path": "README.md", "file_type": "markdown", "technology": "typescript", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758497.9818275", "source_type": "github", "chunk_length": 222, "word_count": 8, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
{"chunk_id": "05f6e2e4fc7d801b3e335a70cd30890e", "content": "Roadmap For details on our planned features and future direction, please refer to our roadmap(https:github.commicrosoftTypeScriptwikiRoadmap).", "metadata": {"title": "TypeScript", "url": "https://github.com/microsoft/TypeScript/blob/main/README.md", "repo": "microsoft/TypeScript", "file_path": "README.md", "file_type": "markdown", "technology": "typescript", "professional_context": "api_reference", "english_level": "B1", "content_type": "github_documentation", "last_updated": "1761758497.9818275", "source_type": "github", "chunk_length": 142, "word_count": 15, "language": "en", "processing_timestamp": "0.0"}, "embedding": null}
