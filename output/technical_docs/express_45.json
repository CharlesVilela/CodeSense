{
  "metadata": {
    "title": "Basic routing",
    "url": "https://expressjs.com/en/starter/basic-routing.html",
    "technology": "express",
    "category": "frameworks",
    "english_level": "B1",
    "professional_context": "development",
    "content_type": "technical_documentation",
    "last_updated": "1761765805.881451"
  },
  "content": "Basic routing\nrefers to determining how an application responds to a client request to a particular endpoint, which is a URI (or path) and a specific HTTP request method (GET, POST, and so on).\nEach route can have one or more handler functions, which are executed when the route is matched.\nRoute definition takes the following structure:\nis an instance of\nHTTP request method\n, in lowercase.\nis a path on the server.\nis the function executed when the route is matched.\nThis tutorial assumes that an instance of\nis created and the server is running. If you are not familiar with creating an app and starting it, see the\nHello world example\nThe following examples illustrate defining simple routes.\nRespond with\nHello World!\non the homepage:\nHello World!\nRespond to a POST request on the root route (\n), the applicationâ€™s home page:\nGot a POST request\nRespond to a PUT request to the\nGot a PUT request at /user\nRespond to a DELETE request to the\nGot a DELETE request at /user\nFor more details about routing, see the\nrouting guide\nPrevious: Express application generator\nNext: Serving static files in Express\nEdit this page",
  "word_count": 196,
  "key_terms": [
    "function",
    "method"
  ]
}