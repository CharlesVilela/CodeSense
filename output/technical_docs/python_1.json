{
  "metadata": {
    "title": "The Python Standard Library¶",
    "url": "https://docs.python.org/3/library/index.html",
    "technology": "python",
    "category": "programming_languages",
    "english_level": "B1",
    "professional_context": "development",
    "content_type": "technical_documentation",
    "last_updated": "1761765672.6879616"
  },
  "content": "The Python Standard Library\nThe Python Language Reference\ndescribes the exact syntax and\nsemantics of the Python language, this library reference manual\ndescribes the standard library that is distributed with Python. It also\ndescribes some of the optional components that are commonly included\nin Python distributions.\nPython’s standard library is very extensive, offering a wide range of\nfacilities as indicated by the long table of contents listed below. The\nlibrary contains built-in modules (written in C) that provide access to\nsystem functionality such as file I/O that would otherwise be\ninaccessible to Python programmers, as well as modules written in Python\nthat provide standardized solutions for many problems that occur in\neveryday programming. Some of these modules are explicitly designed to\nencourage and enhance the portability of Python programs by abstracting\naway platform-specifics into platform-neutral APIs.\nThe Python installers for the Windows platform usually include\nthe entire standard library and often also include many additional\ncomponents. For Unix-like operating systems Python is normally provided\nas a collection of packages, so it may be necessary to use the packaging\ntools provided with the operating system to obtain some or all of the\noptional components.\nIn addition to the standard library, there is an active collection of\nhundreds of thousands of components (from individual programs and modules to\npackages and entire application development frameworks), available from\nPython Package Index\nIntroduction\nNotes on availability\nBuilt-in Functions\nBuilt-in Constants\nConstants added by the\nBuilt-in Types\nTruth Value Testing\nBoolean Operations —\nComparisons\nNumeric Types —\nBoolean Type -\nIterator Types\nSequence Types —\nText and Binary Sequence Type Methods Summary\nText Sequence Type —\nBinary Sequence Types —\nSet Types —\nMapping Types —\nContext Manager Types\nType Annotation Types —\nGeneric Alias\nOther Built-in Types\nSpecial Attributes\nInteger string conversion length limitation\nBuilt-in Exceptions\nException context\nInheriting from built-in exceptions\nBase classes\nConcrete exceptions\nException groups\nException hierarchy\nText Processing Services\n— Common string operations\nstring.templatelib\n— Support for template string literals\n— Regular expression operations\n— Helpers for computing deltas\n— Text wrapping and filling\nunicodedata\n— Unicode Database\n— Internet String Preparation\n— GNU readline interface\nrlcompleter\n— Completion function for GNU readline\nBinary Data Services\n— Interpret bytes as packed binary data\n— Codec registry and base classes\n— Basic date and time types\n— IANA time zone support\n— General calendar-related functions\ncollections\n— Container datatypes\ncollections.abc\n— Abstract Base Classes for Containers\n— Heap queue algorithm\n— Array bisection algorithm\n— Efficient arrays of numeric values\n— Weak references\n— Dynamic type creation and names for built-in types\n— Shallow and deep copy operations\n— Data pretty printer\n— Alternate\nimplementation\n— Support for enumerations\n— Functionality to operate with graph-like structures\nNumeric and Mathematical Modules\n— Numeric abstract base classes\n— Mathematical functions\n— Mathematical functions for complex numbers\n— Decimal fixed-point and floating-point arithmetic\n— Rational numbers\n— Generate pseudo-random numbers\n— Mathematical statistics functions\nFunctional Programming Modules\n— Functions creating iterators for efficient looping\n— Higher-order functions and operations on callable objects\n— Standard operators as functions\nFile and Directory Access\n— Object-oriented filesystem paths\n— Common pathname manipulations\n— Interpreting\n— File and Directory Comparisons\n— Generate temporary files and directories\n— Unix style pathname pattern expansion\n— Unix filename pattern matching\n— Random access to text lines\n— High-level file operations\nData Persistence\n— Python object serialization\nsupport functions\n— Python object persistence\n— Internal Python object serialization\n— Interfaces to Unix “databases”\n— DB-API 2.0 interface for SQLite databases\nData Compression and Archiving\ncompression\ncompression.zstd\n— Compression compatible with the Zstandard format\n— Compression compatible with\n— Support for\n— Support for\ncompression\n— Compression using the LZMA algorithm\n— Work with ZIP archives\n— Read and write tar archive files\nFile Formats\n— CSV File Reading and Writing\nconfigparser\n— Configuration file parser\n— Parse TOML files\n— netrc file processing\n— Generate and parse Apple\nCryptographic Services\n— Secure hashes and message digests\n— Keyed-Hashing for Message Authentication\n— Generate secure random numbers for managing secrets\nGeneric Operating System Services\n— Miscellaneous operating system interfaces\n— Core tools for working with streams\n— Time access and conversions\n— Logging facility for Python\nlogging.config\n— Logging configuration\nlogging.handlers\n— Logging handlers\n—  Access to underlying platform’s identifying data\n— Standard errno system symbols\n— A foreign function library for Python\nCommand-line interface libraries\n— Parser for command-line options, arguments and subcommands\n— Parser for command line options\n— Portable password input\n— Iterate over lines from multiple input streams\n— Terminal handling for character-cell displays\ncurses.textpad\n— Text input widget for curses programs\ncurses.ascii\n— Utilities for ASCII characters\ncurses.panel\n— A panel stack extension for curses\n— Support for line-oriented command interpreters\nConcurrent Execution\n— Thread-based parallelism\nmultiprocessing\n— Process-based parallelism\nmultiprocessing.shared_memory\n— Shared memory for direct access across processes\nconcurrent.futures\n— Launching parallel tasks\nconcurrent.interpreters\n— Multiple interpreters in the same process\n— Subprocess management\n— Event scheduler\n— A synchronized queue class\ncontextvars\n— Context Variables\n— Low-level threading API\nNetworking and Interprocess Communication\n— Asynchronous I/O\n— Low-level networking interface\n— TLS/SSL wrapper for socket objects\n— Waiting for I/O completion\n— High-level I/O multiplexing\n— Set handlers for asynchronous events\n— Memory-mapped file support\nInternet Data Handling\n— An email and MIME handling package\n— JSON encoder and decoder\n— Manipulate mailboxes in various formats\n— Map filenames to MIME types\n— Base16, Base32, Base64, Base85 Data Encodings\n— Convert between binary and ASCII\n— Encode and decode MIME quoted-printable data\nStructured Markup Processing Tools\n— HyperText Markup Language support\nhtml.parser\n— Simple HTML and XHTML parser\nhtml.entities\n— Definitions of HTML general entities\nXML Processing Modules\nxml.etree.ElementTree\n— The ElementTree XML API\n— The Document Object Model API\nxml.dom.minidom\n— Minimal DOM implementation\nxml.dom.pulldom\n— Support for building partial DOM trees\n— Support for SAX2 parsers\nxml.sax.handler\n— Base classes for SAX handlers\nxml.sax.saxutils\n— SAX Utilities\nxml.sax.xmlreader\n— Interface for XML parsers\nxml.parsers.expat\n— Fast XML parsing using Expat\nInternet Protocols and Support\n— Convenient web-browser controller\n— WSGI Utilities and Reference Implementation\n— URL handling modules\nurllib.request\n— Extensible library for opening URLs\nurllib.response\n— Response classes used by urllib\nurllib.parse\n— Parse URLs into components\nurllib.error\n— Exception classes raised by urllib.request\nurllib.robotparser\n—  Parser for robots.txt\n— HTTP modules\nhttp.client\n— HTTP protocol client\n— FTP protocol client\n— POP3 protocol client\n— IMAP4 protocol client\n— SMTP protocol client\n— UUID objects according to\nsocketserver\n— A framework for network servers\nhttp.server\n— HTTP servers\nhttp.cookies\n— HTTP state management\nhttp.cookiejar\n— Cookie handling for HTTP clients\n— XMLRPC server and client modules\nxmlrpc.client\n— XML-RPC client access\nxmlrpc.server\n— Basic XML-RPC servers\n— IPv4/IPv6 manipulation library\nMultimedia Services\n— Read and write WAV files\n— Conversions between color systems\nInternationalization\n— Multilingual internationalization services\n— Internationalization services\nGraphical user interfaces with Tk\n— Python interface to Tcl/Tk\ntkinter.colorchooser\n— Color choosing dialog\ntkinter.font\n— Tkinter font wrapper\nTkinter Dialogs\ntkinter.messagebox\n— Tkinter message prompts\ntkinter.scrolledtext\n— Scrolled Text Widget\ntkinter.dnd\n— Drag and drop support\ntkinter.ttk\n— Tk themed widgets\nIDLE — Python editor and shell\n— Turtle graphics\nDevelopment Tools\n— Support for type hints\n— Documentation generator and online help system\nPython Development Mode\n— Test interactive Python examples\n— Unit testing framework\nunittest.mock\n— mock object library\nunittest.mock\n— getting started\n— Regression tests package for Python\ntest.support\n— Utilities for the Python test suite\ntest.support.socket_helper\n— Utilities for socket tests\ntest.support.script_helper\n— Utilities for the Python execution tests\ntest.support.bytecode_helper\n— Support tools for testing correct bytecode generation\ntest.support.threading_helper\n— Utilities for threading tests\ntest.support.os_helper\n— Utilities for os tests\ntest.support.import_helper\n— Utilities for import tests\ntest.support.warnings_helper\n— Utilities for warnings tests\nDebugging and Profiling\nAudit events table\n— Debugger framework\nfaulthandler\n— Dump the Python traceback\n— The Python Debugger\nThe Python Profilers\n— Measure execution time of small code snippets\n— Trace or track Python statement execution\ntracemalloc\n— Trace memory allocations\nSoftware Packaging and Distribution\n— Bootstrapping the\n— Creation of virtual environments\n— Manage executable Python zip archives\nPython Runtime Services\n— System-specific parameters and functions\nsys.monitoring\n— Execution event monitoring\n— Provide access to Python’s configuration information\n— Built-in objects\n— Top-level code environment\n— Warning control\ndataclasses\n— Data Classes\n— Utilities for\n-statement contexts\n— Abstract Base Classes\n— Exit handlers\n— Print or retrieve a stack traceback\n— Future statement definitions\n— Garbage Collector interface\n— Inspect live objects\nannotationlib\n— Functionality for introspecting annotations\n— Site-specific configuration hook\nCustom Python Interpreters\n— Interpreter base classes\n— Compile Python code\nImporting Modules\n— Import modules from Zip archives\n— Package extension utility\nmodulefinder\n— Find modules used by a script\n— Locating and executing Python modules\n— The implementation of\nimportlib.resources\n– Package resource reading, opening and access\nimportlib.resources.abc\n– Abstract base classes for resources\nimportlib.metadata\n– Accessing package metadata\nThe initialization of the\nmodule search path\nPython Language Services\n— Abstract syntax trees\n— Access to the compiler’s symbol tables\n— Constants used with Python parse trees\n— Testing for Python keywords\n— Tokenizer for Python source\n— Detection of ambiguous indentation\n— Python module browser support\n— Compile Python source files\n— Byte-compile Python libraries\n— Disassembler for Python bytecode\npickletools\n— Tools for pickle developers\nMS Windows Specific Services\n— Useful routines from the MS VC++ runtime\n— Windows registry access\n— Sound-playing interface for Windows\nUnix-specific services\n— Simple lexical analysis\n— The most common POSIX system calls\n— The password database\n— The group database\n— POSIX style tty control\n— Terminal control functions\n— Pseudo-terminal utilities\nsystem calls\n— Resource usage information\n— Unix syslog library routines\nModules command-line interface (CLI)\nSuperseded Modules\n— C-style parser for command line options\nRemoved Modules\nSecurity Considerations",
  "word_count": 1642,
  "key_terms": [
    "authentication",
    "framework",
    "configuration",
    "function",
    "class",
    "import",
    "implementation",
    "database",
    "object",
    "api"
  ]
}