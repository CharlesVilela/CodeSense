{
  "metadata": {
    "title": "About commits",
    "url": "https://docs.github.com/en/pull-requests/committing-changes-to-your-project/creating-and-editing-commits/about-commits",
    "technology": "github",
    "category": "tools_platforms",
    "english_level": "B1",
    "professional_context": "collaboration",
    "content_type": "technical_documentation",
    "last_updated": "1761766065.4689083"
  },
  "content": "About commits\nYou can save small groups of meaningful changes as commits.\nIn this article\nAbout commits\nSimilar to saving a file that's been edited, a commit records changes to one or more files in your branch. Git assigns each commit a unique ID, called a SHA or hash, that identifies:\nThe specific changes\nWhen the changes were made\nWho created the changes\nWhen you make a commit, you must include a commit message that briefly describes the changes.\nIf the repository you are committing to has compulsory commit signoffs enabled, and you are committing via the web interface, you will automatically sign off on the commit as part of the commit process. For more information, see\nManaging the commit signoff policy for your repository\nYou can add a co-author on any commits you collaborate on. For more information, see\nCreating a commit with multiple authors\nYou can also create a commit on behalf of an organization. For more information, see\nCreating a commit on behalf of an organization\nRebasing allows you to change a series of commits and can modify the order of the commits in your timeline. For more information, see\nAbout Git rebase\nAbout commit branches and tag labels\nYou can see which branch a commit is on by looking at the labels beneath the commit on the commit page.\nOn GitHub, navigate to the main page of the repository.\nOn the main page of the repository, above the file list, click\nTo navigate to a specific commit, click the commit message for that commit.\nTo see what branch the commit is on, check the label below the commit message.\nIf your commit is not on the default branch (\n), the label will show the branches which contain the commit. If the commit is part of an unmerged pull request, you can click the link to go to the pull request.\nOnce the commit is on the default branch, any tags that contain the commit will be shown and the default branch will be the only branch listed. For more information on tags, see\nGit Basics - Tagging\nin the Git documentation.\nUsing the file tree\nYou can use the file tree to navigate between files in a commit.\nOn GitHub, navigate to the main page of the repository.\nOn the main page of the repository, above the file list, click\nTo navigate to a specific commit, click the commit message for that commit.\nClick on a file in the file tree to view the corresponding file diff. If the file tree is hidden, click\nto display the file tree.\nThe file tree will not display if your screen width is too narrow or if the commit only includes one file.\nTo filter by file path, enter part or all of the file path in the\nFilter changed files\nsearch box.\nFurther reading\nCommitting and reviewing changes to your project in GitHub Desktop\non GitHub Desktop",
  "word_count": 490,
  "key_terms": []
}