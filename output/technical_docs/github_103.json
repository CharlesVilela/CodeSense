{
  "metadata": {
    "title": "About pull requests",
    "url": "https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests",
    "technology": "github",
    "category": "tools_platforms",
    "english_level": "B1",
    "professional_context": "collaboration",
    "content_type": "technical_documentation",
    "last_updated": "1761766061.665019"
  },
  "content": "About pull requests\nLearn about pull requests and draft pull requests on GitHub. Pull requests communicate changes to a branch in a repository. Once a pull request is opened, you can review changes with collaborators and add follow-up commits.\nPlatform navigation\nIn this article\nAbout pull requests\nA pull request is a proposal to merge a set of changes from one branch into another. In a pull request, collaborators can review and discuss the proposed set of changes before they integrate the changes into the main codebase. Pull requests display the differences, or diffs, between the content in the source branch and the content in the target branch.\nWhen working with pull requests, keep the following in mind:\nIf you're working in the\nshared repository model\n, we recommend that you use a topic branch for your pull request. While you can send pull requests from any branch or commit, with a topic branch you can push follow-up commits if you need to update your proposed changes.\nBe very careful when force pushing commits to a pull request. Force pushing changes the repository history and can corrupt your pull request. If other collaborators branch the project before a force push, the force push may overwrite commits that collaborators based their work on.\nYou can create pull requests on GitHub.com, with GitHub Desktop, in GitHub Codespaces, on GitHub Mobile, and when using GitHub CLI.\nAfter initializing a pull request, you'll see a review page that shows a high-level overview of the changes between your branch (the compare branch) and the repository's base branch. You can add a summary of the proposed changes, review the changes made by commits, add labels, milestones, and assignees, and @mention individual contributors or teams. See\nCreating a pull request\nOnce you've created a pull request, you can push commits from your topic branch to add them to your existing pull request. These commits will appear in chronological order within your pull request and the changes will be visible in the \"Files changed\" tab.\nOther contributors can review your proposed changes, add review comments, contribute to the pull request discussion, and even add commits to the pull request. By default, in public repositories, any user can submit reviews that approve or request changes to a pull request. Organization owners and repository admins can limit who is able to give approving pull request reviews or request changes. For more information, see\nManaging pull request reviews in your organization\nManaging pull request reviews in your repository\nYou can see information about the branch's current deployment status and past deployment activity on the \"Conversation\" tab. See\nViewing deployment activity for your repository\nAfter you're happy with the proposed changes, you can merge the pull request. If you're working in a shared repository model, you create a pull request and you, or someone else, will merge your changes from your feature branch into the base branch you specify in your pull request. See\nMerging a pull request\nIf status checks are required for a repository, the required status checks must pass before you can merge your branch into the protected branch. For more information, see\nAbout protected branches\nYou can link a pull request to an issue to show that a fix is in progress and to automatically close the issue when someone merges the pull request. For more information, see\nLinking a pull request to an issue\nTo toggle between collapsing and expanding all outdated review comments in a pull request, hold down\nShow outdated\nHide outdated\n. For more shortcuts, see\nKeyboard shortcuts\nYou can squash commits when merging a pull request to gain a more streamlined view of changes. See\nAbout pull request merges\nYou can visit your dashboard to quickly find links to recently updated pull requests you're working on or subscribed to. See\nQuickstart for your personal dashboard\nDraft pull requests\nWhen you create a pull request, you can choose to create a pull request that is ready for review or a draft pull request. Draft pull requests cannot be merged, and code owners are not automatically requested to review draft pull requests. See\nCreating a pull request\nCreating a pull request from a fork\nWhen you're ready to get feedback on your pull request, you can mark your draft pull request as ready for review. Marking a pull request as ready for review will request reviews from any code owners. You can convert a pull request to a draft at any time. See\nChanging the stage of a pull request\nDifferences between commits on compare and pull request pages\nThe compare and pull request pages use different methods to calculate the diff for changed files:\nCompare pages show the diff between the tip of the head ref and the current common ancestor (that is, the merge base) of the head and base ref.\nPull request pages show the diff between the tip of the head ref and the common ancestor of the head and base ref at the time when the pull request was created. Consequently, the merge base used for the comparison might be different.\nFurther reading\nGitHub glossary\nin the GitHub glossary\nAbout branches\nCommenting on a pull request\nClosing a pull request",
  "word_count": 870,
  "key_terms": [
    "deployment"
  ]
}