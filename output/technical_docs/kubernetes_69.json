{
  "metadata": {
    "title": "Untitled",
    "url": "https://kubernetes.io/fr/docs/concepts/",
    "technology": "kubernetes",
    "category": "devops_cloud",
    "english_level": "B1",
    "professional_context": "deployment",
    "content_type": "technical_documentation",
    "last_updated": "1761765908.4880626"
  },
  "content": "La section Concepts vous aide à mieux comprendre les composants du système Kubernetes et les abstractions que Kubernetes utilise pour représenter votre cluster.\nElle vous aide également à mieux comprendre le fonctionnement de Kubernetes en général.\nVue d'ensemble\nPour utiliser Kubernetes, vous utilisez\nles objets de l'API Kubernetes\npour décrire\nl'état souhaité\nde votre cluster: quelles applications ou autres processus que vous souhaitez exécuter, quelles images de conteneur elles utilisent, le nombre de réplicas, les ressources réseau et disque que vous mettez à disposition, et plus encore.\nVous définissez l'état souhaité en créant des objets à l'aide de l'API Kubernetes, généralement via l'interface en ligne de commande,\nVous pouvez également utiliser l'API Kubernetes directement pour interagir avec le cluster et définir ou modifier l'état souhaité.\nUne fois que vous avez défini l'état souhaité, le\nplan de contrôle Kubernetes\n(control plane en anglais) permet de faire en sorte que l'état actuel du cluster corresponde à l'état souhaité.\nPour ce faire, Kubernetes effectue automatiquement diverses tâches, telles que le démarrage ou le redémarrage de conteneurs, la mise à jour du nombre de réplicas d'une application donnée, etc.\nLe control plane Kubernetes comprend un ensemble de processus en cours d'exécution sur votre cluster:\nmaître Kubernetes\n(Kubernetes master en anglais) qui est un ensemble de trois processus qui s'exécutent sur un seul nœud de votre cluster, désigné comme nœud maître (master node en anglais). Ces processus sont:\nkube-apiserver\nkube-controller-manager\nkube-scheduler\nChaque nœud non maître de votre cluster exécute deux processus:\n, qui communique avec le Kubernetes master.\n, un proxy réseau reflétant les services réseau Kubernetes sur chaque nœud.\nObjets Kubernetes\nKubernetes contient un certain nombre d'abstractions représentant l'état de votre système: applications et processus conteneurisés déployés, leurs ressources réseau et disque associées, ainsi que d'autres informations sur les activités de votre cluster.\nCes abstractions sont représentées par des objets de l'API Kubernetes; consultez\nVue d'ensemble des objets Kubernetes\npour plus d'informations.\nLes objets de base de Kubernetes incluent:\nEn outre, Kubernetes contient un certain nombre d'abstractions de niveau supérieur appelées Contrôleurs.\nLes contrôleurs s'appuient sur les objets de base et fournissent des fonctionnalités supplémentaires.\nVoici quelques exemples:\nStatefulSet\nKubernetes control plane\nLes différentes parties du control plane Kubernetes, telles que les processus Kubernetes master et kubelet, déterminent la manière dont Kubernetes communique avec votre cluster.\nLe control plane conserve un enregistrement de tous les objets Kubernetes du système et exécute des boucles de contrôle continues pour gérer l'état de ces objets.\nÀ tout moment, les boucles de contrôle du control plane répondent aux modifications du cluster et permettent de faire en sorte que l'état réel de tous les objets du système corresponde à l'état souhaité que vous avez fourni.\nPar exemple, lorsque vous utilisez l'API Kubernetes pour créer un objet Deployment, vous fournissez un nouvel état souhaité pour le système.\nLe control plane Kubernetes enregistre la création de cet objet et exécute vos instructions en lançant les applications requises et en les planifiant vers des nœuds de cluster, afin que l'état actuel du cluster corresponde à l'état souhaité.\nKubernetes master\nLe Kubernetes master est responsable du maintien de l'état souhaité pour votre cluster.\nLorsque vous interagissez avec Kubernetes, par exemple en utilisant l'interface en ligne de commande\n, vous communiquez avec le master Kubernetes de votre cluster.\nLe \"master\" fait référence à un ensemble de processus gérant l'état du cluster.\nEn règle générale, tous les processus sont exécutés sur un seul nœud du cluster.\nCe nœud est également appelé master.\nLe master peut également être répliqué pour la disponibilité et la redondance.\nNoeuds Kubernetes\nLes nœuds d’un cluster sont les machines (serveurs physiques, machines virtuelles, etc.) qui exécutent vos applications et vos workflows.\nLe master node Kubernetes contrôle chaque noeud; vous interagirez rarement directement avec les nœuds.\nMetadonnées des objets Kubernetes\nAnnotations\nSi vous souhaitez écrire une page de concept, consultez\nUtilisation de modèles de page\npour plus d'informations sur le type de page pour la documentation d'un concept.\nVue d'ensemble\nKubernetes est une plateforme open source portable et extensible pour gérer les charges de travail et les services conteneurisés, qui facilite à la fois la configuration déclarative et l'automatisation. Il dispose d'un écosystème vaste et en pleine croissance. Les services, le support et les outils Kubernetes sont largement disponibles.\nArchitecture du cluster\nLes concepts architecturaux derrière Kubernetes.\nLes conteneurs\nConteneurs Kubernetes\nComprendre les Pods, le plus petit objet déployable sur Kubernetes, et les abstractions de haut niveaux vous permettant de les lancer.\nServices, Equilibreur de charge, et Réseau\nService Reseau Kubernetes\nConfiguration\nAdministration d'un cluster\nAdministration cluster Kubernetes\nExtensions Kubernetes\nCette page est elle utile ?\nThanks for the feedback. If you have a specific, answerable question about how to use Kubernetes, ask it on\nStack Overflow\nOpen an issue in the\nGitHub Repository\nif you want to\nreport a problem\nsuggest an improvement\nDernière modification September 02, 2024 at 9:30 PM PST:\nupdate fr docs concepts overview (db1e142f84)",
  "word_count": 817,
  "key_terms": [
    "configuration"
  ]
}