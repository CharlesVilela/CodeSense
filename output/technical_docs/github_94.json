{
  "metadata": {
    "title": "About GitHub and Git",
    "url": "https://docs.github.com/en/get-started/start-your-journey/about-github-and-git",
    "technology": "github",
    "category": "tools_platforms",
    "english_level": "B1",
    "professional_context": "collaboration",
    "content_type": "technical_documentation",
    "last_updated": "1761766046.6207712"
  },
  "content": "About GitHub and Git\nYou can use GitHub and Git to collaborate on work.\nIn this article\nAbout GitHub\nGitHub is a cloud-based platform where you can store, share, and work together with others to write code.\nStoring your code in a \"repository\" on GitHub allows you to:\nShowcase or share\nTrack and manage\nchanges to your code over time.\nyour code, and make suggestions to improve it.\nCollaborate\non a shared project, without worrying that your changes will impact the work of your collaborators before you're ready to integrate them.\nCollaborative working, one of GitHub’s fundamental features, is made possible by the open-source software, Git, upon which GitHub is built.\nGit is a version control system that intelligently tracks changes in files. Git is particularly useful when you and a group of people are all making changes to the same files at the same time.\nTypically, to do this in a Git-based workflow, you would:\nCreate a branch\noff from the main copy of files that you (and your collaborators) are working on.\nto the files independently and safely on your own personal branch.\nLet Git intelligently\nyour specific changes back into the main copy of files, so that your changes don't impact other people's updates.\nof your and other people's changes, so you all stay working on the most up-to-date version of the project.\nTo try using Git yourself, see\nGetting started with Git\nHow do Git and GitHub work together?\nWhen you upload files to GitHub, you'll store them in a \"Git repository.\" This means that when you make changes (or \"commits\") to your files in GitHub, Git will automatically start to track and manage your changes.\nThere are plenty of Git-related actions that you can complete on GitHub directly in your browser, such as creating a Git repository, creating branches, and uploading and editing files.\nHowever, most people work on their files locally (on their own computer), then continually sync these local changes—and all the related Git data—with the central \"remote\" repository on GitHub. There are plenty of tools that you can use to do this, such as GitHub Desktop.\nOnce you start to collaborate with others and all need to work on the same repository at the same time, you’ll continually:\nall the latest changes made by your collaborators from the remote repository on GitHub.\nback your own changes to the same remote repository on GitHub.\nGit figures out how to intelligently merge this flow of changes, and GitHub helps you manage the flow through features such as \"pull requests.\"\nWhere do I start?\nIf you're new to GitHub, and unfamiliar with Git, we recommend working through the articles in the\nStart your journey\ncategory. The articles focus on tasks you can complete directly in your browser on GitHub and will help you to:\nCreate an account\nLearn the \"GitHub Flow\"\n, and the key principles of collaborative working (branches, commits, pull requests, merges).\nPersonalise your profile\nto share your interests and skills.\nExplore GitHub\nto find inspiration for your own projects and connect with others.\nLearn how to\ninteresting code for your own use.\nLearn how to\nsomething you're working on to a GitHub repository.\nCreating an account on GitHub\nFurther reading\nConnecting to GitHub",
  "word_count": 541,
  "key_terms": []
}