{
  "metadata": {
    "title": "React",
    "url": "https://react.dev/",
    "technology": "react",
    "category": "frameworks",
    "english_level": "B1",
    "professional_context": "deployment",
    "content_type": "technical_documentation",
    "last_updated": "1761765736.5440114"
  },
  "content": "The library for web and native user interfaces\nLearn React\nAPI Reference\nCreate user interfaces from components\nReact lets you build user interfaces out of individual pieces called components. Create your own React components like\n. Then combine them into entire screens, pages, and apps.\nVideo description\nWhether you work on your own or with thousands of other developers, using React feels the same. It is designed to let you seamlessly combine components written by independent people, teams, and organizations.\nWrite components with code and markup\nReact components are JavaScript functions. Want to show some content conditionally? Use an\nstatement. Displaying a list? Try array\n. Learning React is learning programming.\nVideoList.js\nFirst video\nVideo description\nSecond video\nVideo description\nThird video\nVideo description\nThis markup syntax is called JSX. It is a JavaScript syntax extension popularized by React. Putting JSX markup close to related rendering logic makes React components easy to create, maintain, and delete.\nAdd interactivity wherever you need it\nReact components receive data and return what should appear on the screen. You can pass them new data in response to an interaction, like when the user types into an input. React will then update the screen to match the new data.\nSearchableVideoList.js\nexample.com\nvideos.html\nReact Videos\nA brief history of React\nReact: The Documentary\nThe origin story of React\nRethinking Best Practices\nPete Hunt (2013)\nIntroducing React Native\nTom Occhino (2015)\nIntroducing React Hooks\nSophie Alpert and Dan Abramov (2018)\nIntroducing Server Components\nDan Abramov and Lauren Tan (2020)\nYou don’t have to build your whole page in React. Add React to your existing HTML page, and render interactive React components anywhere on it.\nAdd React to your page\nGo full-stack\nwith a framework\nReact is a library. It lets you put components together, but it doesn’t prescribe how to do routing and data fetching. To build an entire app with React, we recommend a full-stack React framework like\nReact Router\nconfs/[slug].js\nexample.com\nconfs/react-conf-2021\nReact Conf 2021\nReact Conf 2019\nReact 18 Keynote\nThe React Team\nReact 18 for App Developers\nShruti Kapoor\nStreaming Server Rendering with Suspense\nShaundai Person\nThe First React Working Group\nAakansha Doshi\nReact Developer Tooling\nBrian Vaughn\nReact without memo\nXuan Huang (黄玄)\nReact Docs Keynote\nRachel Nabors\nThings I Learnt from the New React Docs\nDebbie O'Brien\nLearning in the Browser\nSarah Rainsberger\nThe ROI of Designing with React\nInteractive Playgrounds with React\nDelba de Oliveira\nRe-introducing Relay\nRobert Balicki\nReact Native Desktop\nEric Rozell and Steven Moyes\nOn-device Machine Learning for React Native\nRoman Rädle\nReact 18 for External Store Libraries\nDaishi Kato\nBuilding Accessible Components with React 18\nAccessible Japanese Form Components with React\nTafu Nakazaki\nUI Tools for Artists\nLyle Troxell\nHydrogen + React 18\nReact is also an architecture. Frameworks that implement it let you fetch data in asynchronous components that run on the server or even during the build. Read data from a file or a database, and pass it down to your interactive components.\nGet started with a framework\nUse the best from every platform\nPeople love web and native apps for different reasons. React lets you build both web apps and native apps using the same skills. It leans upon each platform’s unique strengths to let your interfaces feel just right on every platform.\nexample.com\nStay true to the web\nPeople expect web app pages to load fast. On the server, React lets you start streaming HTML while you’re still fetching data, progressively filling in the remaining content before any JavaScript code loads. On the client, React can use standard web APIs to keep your UI responsive even in the middle of rendering.\nGo truly native\nPeople expect native apps to look and feel like their platform.\nReact Native\nlet you build apps in React for Android, iOS, and more. They look and feel native because their UIs\ntruly native. It’s not a web view—your React components render real Android and iOS views provided by the platform.\nWith React, you can be a web\na native developer. Your team can ship to many platforms without sacrificing the user experience. Your organization can bridge the platform silos, and form teams that own entire features end-to-end.\nBuild for native platforms\nUpgrade when the future is ready\nReact approaches changes with care. Every React commit is tested on business-critical surfaces with over a billion users. Over 100,000 React components at Meta help validate every migration strategy.\nThe React team is always researching how to improve React. Some research takes years to pay off. React has a high bar for taking a research idea into production. Only proven approaches become a part of React.\nRead more React news\nLatest React News\nReact Conf 2025 Recap\nOctober 16, 2025\nReact Compiler v1.0\nOctober 7, 2025\nIntroducing the React Foundation\nOctober 7, 2025\nView Transitions and Activity\nApril 23, 2025\nRead more React news\nJoin a community\nof millions\nYou’re not alone. Two million developers from all over the world visit the React docs every month. React is something that people and teams can agree on.\nThis is why React is more than a library, an architecture, or even an ecosystem. React is a community. It’s a place where you can ask for help, find opportunities, and meet new friends. You will meet both developers and designers, beginners and experts, researchers and artists, teachers and students. Our backgrounds may be very different, but React lets us all create user interfaces together.\nWelcome to the\nReact community\nGet Started",
  "word_count": 918,
  "key_terms": [
    "return",
    "api",
    "framework"
  ]
}